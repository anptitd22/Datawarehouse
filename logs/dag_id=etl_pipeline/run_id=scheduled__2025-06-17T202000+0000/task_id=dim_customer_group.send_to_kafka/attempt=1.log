{"timestamp":"2025-06-17T20:30:46.739206","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-06-17T20:30:46.754575","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/etl_pipeline.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-06-17T20:30:47.697665Z","level":"info","event":"Task instance is in running state","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-17T20:30:47.698687Z","level":"info","event":" Previous state of the Task instance: queued","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-17T20:30:47.699187Z","level":"info","event":"Current task name:dim_customer_group.send_to_kafka","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-17T20:30:47.699620Z","level":"info","event":"Dag name:etl_pipeline","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-17T20:30:48.500353Z","level":"error","event":"WARNING: Using incubator modules: jdk.incubator.vector","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T20:30:51.472912Z","level":"error","event":":: loading settings :: url = jar:file:/home/airflow/.local/lib/python3.12/site-packages/pyspark/jars/ivy-2.5.3.jar!/org/apache/ivy/core/settings/ivysettings.xml","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T20:30:51.647813Z","level":"error","event":"Ivy Default Cache set to: /home/airflow/.ivy2.5.2/cache","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T20:30:51.649002Z","level":"error","event":"The jars for the packages stored in: /home/airflow/.ivy2.5.2/jars","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T20:30:51.659281Z","level":"error","event":"org.postgresql#postgresql added as a dependency","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T20:30:51.661788Z","level":"error","event":":: resolving dependencies :: org.apache.spark#spark-submit-parent-5b367625-de82-4eb5-b66f-ef93a98c5640;1.0","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T20:30:51.663048Z","level":"error","event":"\tconfs: [default]","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T20:30:51.927773Z","level":"error","event":"\tfound org.postgresql#postgresql;42.7.1 in central","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T20:30:51.994160Z","level":"error","event":"\tfound org.checkerframework#checker-qual;3.41.0 in central","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T20:30:52.042841Z","level":"error","event":":: resolution report :: resolve 364ms :: artifacts dl 18ms","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T20:30:52.043580Z","level":"error","event":"\t:: modules in use:","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T20:30:52.044251Z","level":"error","event":"\torg.checkerframework#checker-qual;3.41.0 from central in [default]","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T20:30:52.044869Z","level":"error","event":"\torg.postgresql#postgresql;42.7.1 from central in [default]","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T20:30:52.049007Z","level":"error","event":"\t---------------------------------------------------------------------","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T20:30:52.050960Z","level":"error","event":"\t|                  |            modules            ||   artifacts   |","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T20:30:52.055123Z","level":"error","event":"\t|       conf       | number| search|dwnlded|evicted|| number|dwnlded|","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T20:30:52.056103Z","level":"error","event":"\t---------------------------------------------------------------------","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T20:30:52.056714Z","level":"error","event":"\t|      default     |   2   |   0   |   0   |   0   ||   2   |   0   |","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T20:30:52.057218Z","level":"error","event":"\t---------------------------------------------------------------------","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T20:30:52.060131Z","level":"error","event":":: retrieving :: org.apache.spark#spark-submit-parent-5b367625-de82-4eb5-b66f-ef93a98c5640","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T20:30:52.061494Z","level":"error","event":"\tconfs: [default]","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T20:30:52.078317Z","level":"error","event":"\t0 artifacts copied, 2 already retrieved (0kB/17ms)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T20:30:52.967653Z","level":"error","event":"25/06/17 20:30:52 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T20:30:53.530775Z","level":"error","event":"Using Spark's default log4j profile: org/apache/spark/log4j2-defaults.properties","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T20:30:53.534517Z","level":"error","event":"Setting default log level to \"WARN\".","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T20:30:53.537220Z","level":"error","event":"To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T20:30:58.911193Z","level":"error","event":"25/06/17 20:30:58 WARN Utils: Service 'SparkUI' could not bind on port 4040. Attempting port 4041.","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T20:31:34.535298Z","level":"info","event":"Tổng số bản ghi cần gửi: 1257","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-17T20:31:35.722598Z","level":"info","event":"Đã tạo topic: dim_customer","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-17T20:31:35.749676Z","level":"info","event":"Đang gửi batch 1 với 100 bản ghi","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-17T20:31:35.752060","level":"error","event":"Task failed with exception","logger":"task","error_detail":[{"exc_type":"TypeError","exc_value":"'float' object cannot be interpreted as an integer","exc_notes":[],"syntax_error":null,"is_cause":false,"frames":[{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/execution_time/task_runner.py","lineno":825,"name":"run"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/execution_time/task_runner.py","lineno":1088,"name":"_execute_task"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/bases/operator.py","lineno":408,"name":"wrapper"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/providers/standard/operators/python.py","lineno":212,"name":"execute"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/providers/standard/operators/python.py","lineno":235,"name":"execute_callable"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/execution_time/callback_runner.py","lineno":81,"name":"run"},{"filename":"/opt/airflow/dags/etl_pipeline.py","lineno":45,"name":"<lambda>"},{"filename":"/opt/airflow/dags/etl_dim_customer.py","lineno":127,"name":"send_customer_to_kafka"}]}]}
{"timestamp":"2025-06-17T20:31:35.799307Z","level":"info","event":"Task instance in failure state","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-17T20:31:35.799944Z","level":"info","event":"Task start","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-17T20:31:35.800297Z","level":"info","event":"Task:<Task(PythonOperator): dim_customer_group.send_to_kafka>","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-17T20:31:35.800747Z","level":"info","event":"Failure caused by 'float' object cannot be interpreted as an integer","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-17T20:31:36.334573Z","level":"error","event":"\r[Stage 0:>                                                          (0 + 0) / 1]\r\r[Stage 0:>                                                          (0 + 1) / 1]","chan":"stderr","logger":"task"}
