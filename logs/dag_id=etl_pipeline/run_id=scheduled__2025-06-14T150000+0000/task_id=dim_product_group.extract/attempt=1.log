{"timestamp":"2025-06-14T15:04:37.009187","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-06-14T15:04:37.010746","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/etl_pipeline.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-06-14T15:04:37.243704Z","level":"error","event":"%3|1749913477.243|FAIL|rdkafka#producer-1| [thrd:localhost:9092/bootstrap]: localhost:9092/bootstrap: Connect to ipv4#127.0.0.1:9092 failed: Connection refused (after 0ms in state CONNECT)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-14T15:04:37.248937Z","level":"error","event":"%3|1749913477.248|FAIL|rdkafka#consumer-2| [thrd:localhost:9092/bootstrap]: localhost:9092/bootstrap: Connect to ipv4#127.0.0.1:9092 failed: Connection refused (after 0ms in state CONNECT)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-14T15:04:37.300952Z","level":"error","event":"%3|1749913477.300|FAIL|rdkafka#consumer-2| [thrd:localhost:9092/bootstrap]: localhost:9092/bootstrap: Connect to ipv4#127.0.0.1:9092 failed: Connection refused (after 0ms in state CONNECT, 1 identical error(s) suppressed)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-14T15:04:37.331335","level":"warning","event":"/opt/airflow/dags/etl_dim_customer.py:18: UserWarning: MessageFactory class is deprecated. Please use GetMessageClass() instead of MessageFactory.GetPrototype. MessageFactory class will be removed after 2024.\n  CustomerMessage = factory.GetPrototype(descriptor)\n","logger":"py.warnings"}
{"timestamp":"2025-06-14T15:04:37.459031Z","level":"info","event":"Task instance is in running state","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-14T15:04:37.459517Z","level":"info","event":" Previous state of the Task instance: queued","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-14T15:04:37.459864Z","level":"info","event":"Current task name:dim_product_group.extract","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-14T15:04:37.460138Z","level":"info","event":"Dag name:etl_pipeline","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-14T15:04:37.343792","level":"info","event":"Secrets backends loaded for worker","count":1,"backend_classes":["EnvironmentVariablesBackend"],"logger":"supervisor"}
{"timestamp":"2025-06-14T15:04:37.460867","level":"info","event":"Connection Retrieved 'postgres_default'","logger":"airflow.hooks.base"}
{"timestamp":"2025-06-14T15:04:37.481387","level":"warning","event":"/opt/airflow/dags/etl_dim_product.py:6: UserWarning: pandas only supports SQLAlchemy connectable (engine/connection) or database string URI or sqlite3 DBAPI2 connection. Other DBAPI2 objects are not tested. Please consider using SQLAlchemy.\n  df = pd.read_sql(\"\"\"\n","logger":"py.warnings"}
{"timestamp":"2025-06-14T15:04:37.533519","level":"info","event":"Done. Returned value was:      product_id                                              name  ... sold stock\n0        136093  Smart Tivi QLED Samsung 4K 55 inch QA55Q60DAKXXV  ...   64   133\n1        135420           Google Tivi Hisense 4K 43 inch 43A6500K  ...   37   458\n2        137158         BRAVIA 3 Tivi LED Sony 4K 50 inch K-50S30  ...   48   411\n3        118535         Google Tivi Sony 4K 65 inch KD-65X75K VN3  ...   71   234\n4        136063  Smart Tivi QLED Samsung 4K 65 inch QA65Q70DAKXXV  ...    6   313\n...         ...                                               ...  ...  ...   ...\n1724     121789                   Bếp nướng điện Sunhouse SHD4602  ...    9   485\n1725       3839                Bếp nướng điện Tiger Queen SQ-S700  ...    7   135\n1726     110380                    Bếp nướng điện Kangaroo KG699G  ...    5   200\n1727     137448              Bếp lẩu nướng đa năng Bear DKL-C12D1  ...    3    59\n1728     171176              Bếp lẩu nướng đa năng Gaabor EH-M01A  ...    3   475\n\n[1729 rows x 10 columns]","logger":"airflow.task.operators.airflow.providers.standard.operators.python.PythonOperator"}
{"timestamp":"2025-06-14T15:04:37.534050","level":"info","event":"Pushing xcom","ti":"RuntimeTaskInstance(id=UUID('01976ef8-9972-7182-8e72-02f4240822f8'), task_id='dim_product_group.extract', dag_id='etl_pipeline', run_id='scheduled__2025-06-14T15:00:00+00:00', try_number=1, map_index=-1, hostname='5426f23f7bc0', context_carrier={}, task=<Task(PythonOperator): dim_product_group.extract>, bundle_instance=LocalDagBundle(name=dags-folder), max_tries=1, start_date=datetime.datetime(2025, 6, 14, 15, 4, 35, 921581, tzinfo=TzInfo(UTC)), end_date=None, is_mapped=False)","logger":"task"}
{"timestamp":"2025-06-14T15:04:37.567155Z","level":"info","event":"Task instance in success state","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-14T15:04:37.567808Z","level":"info","event":" Previous state of the Task instance: running","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-14T15:04:37.568296Z","level":"info","event":"Task operator:<Task(PythonOperator): dim_product_group.extract>","chan":"stdout","logger":"task"}
