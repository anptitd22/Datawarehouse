{"timestamp":"2025-05-10T01:55:00.955409","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-05-10T01:55:00.956280","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/etl_pipeline.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-05-10T01:55:01.037083Z","level":"info","event":"Task instance is in running state","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-10T01:55:01.037956Z","level":"info","event":" Previous state of the Task instance: queued","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-10T01:55:01.038387Z","level":"info","event":"Current task name:run_full_etl","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-10T01:55:01.038787Z","level":"info","event":"Dag name:etl_pipeline","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-10T01:55:01.010817","level":"info","event":"Secrets backends loaded for worker","count":1,"backend_classes":["EnvironmentVariablesBackend"],"logger":"supervisor"}
{"timestamp":"2025-05-10T01:55:01.037493","level":"info","event":"Connection Retrieved 'postgres_default'","logger":"airflow.hooks.base"}
{"timestamp":"2025-05-10T01:55:01.047335","level":"warning","event":"/opt/airflow/dags/etl_dim_date.py:8: UserWarning: pandas only supports SQLAlchemy connectable (engine/connection) or database string URI or sqlite3 DBAPI2 connection. Other DBAPI2 objects are not tested. Please consider using SQLAlchemy.\n  df = pd.read_sql(\"\"\"\n","logger":"py.warnings"}
{"timestamp":"2025-05-10T01:55:01.056994","level":"info","event":"Secrets backends loaded for worker","count":1,"backend_classes":["EnvironmentVariablesBackend"],"logger":"supervisor"}
{"timestamp":"2025-05-10T01:55:01.066472","level":"info","event":"Connection Retrieved 'sqlserver_default'","logger":"airflow.hooks.base"}
{"timestamp":"2025-05-10T01:55:02.968001","level":"info","event":"Secrets backends loaded for worker","count":1,"backend_classes":["EnvironmentVariablesBackend"],"logger":"supervisor"}
{"timestamp":"2025-05-10T01:55:02.974812","level":"info","event":"Connection Retrieved 'postgres_default'","logger":"airflow.hooks.base"}
{"timestamp":"2025-05-10T01:55:02.981016","level":"warning","event":"/opt/airflow/dags/etl_dim_customer.py:6: UserWarning: pandas only supports SQLAlchemy connectable (engine/connection) or database string URI or sqlite3 DBAPI2 connection. Other DBAPI2 objects are not tested. Please consider using SQLAlchemy.\n  df = pd.read_sql(\"\"\"\n","logger":"py.warnings"}
{"timestamp":"2025-05-10T01:55:02.982180","level":"error","event":"Task failed with exception","logger":"task","error_detail":[{"exc_type":"DatabaseError","exc_value":"Execution failed on sql '\n        SELECT \n            c.id AS client_id, \n            c.name as name, \n            c.email as email, \n            c.phone as phone, \n            c.address as address,\n            COALESCE(SUM(o.total_amount), 0) AS total_spent,\n            COUNT(o.id) AS num_order\n        FROM client c\n        LEFT JOIN orders o ON c.id = o.client_id\n        GROUP BY c.id, c.name, c.email, c.phone, c.address\n    ': relation \"client\" does not exist\nLINE 10:         FROM client c\n                      ^\n","exc_notes":[],"syntax_error":null,"is_cause":false,"frames":[{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/execution_time/task_runner.py","lineno":825,"name":"run"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/execution_time/task_runner.py","lineno":1088,"name":"_execute_task"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/bases/operator.py","lineno":408,"name":"wrapper"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/providers/standard/operators/python.py","lineno":212,"name":"execute"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/providers/standard/operators/python.py","lineno":235,"name":"execute_callable"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/execution_time/callback_runner.py","lineno":81,"name":"run"},{"filename":"/opt/airflow/dags/etl_pipeline.py","lineno":34,"name":"run_full_etl"},{"filename":"/opt/airflow/dags/etl_dim_customer.py","lineno":6,"name":"extract_customer"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/pandas/io/sql.py","lineno":654,"name":"read_sql"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/pandas/io/sql.py","lineno":2326,"name":"read_query"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/pandas/io/sql.py","lineno":2274,"name":"execute"}]},{"exc_type":"UndefinedTable","exc_value":"relation \"client\" does not exist\nLINE 10:         FROM client c\n                      ^\n","exc_notes":[],"syntax_error":null,"is_cause":true,"frames":[{"filename":"/home/airflow/.local/lib/python3.12/site-packages/pandas/io/sql.py","lineno":2262,"name":"execute"}]}]}
{"timestamp":"2025-05-10T01:55:03.007191Z","level":"info","event":"Task instance in failure state","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-10T01:55:03.007762Z","level":"info","event":"Task start","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-10T01:55:03.008142Z","level":"info","event":"Task:<Task(PythonOperator): run_full_etl>","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-10T01:55:03.008464Z","level":"info","event":"Failure caused by Execution failed on sql '","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-10T01:55:03.008708Z","level":"info","event":"        SELECT","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-10T01:55:03.008938Z","level":"info","event":"            c.id AS client_id,","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-10T01:55:03.009162Z","level":"info","event":"            c.name as name,","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-10T01:55:03.009356Z","level":"info","event":"            c.email as email,","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-10T01:55:03.009563Z","level":"info","event":"            c.phone as phone,","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-10T01:55:03.009899Z","level":"info","event":"            c.address as address,","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-10T01:55:03.010158Z","level":"info","event":"            COALESCE(SUM(o.total_amount), 0) AS total_spent,","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-10T01:55:03.010548Z","level":"info","event":"            COUNT(o.id) AS num_order","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-10T01:55:03.010788Z","level":"info","event":"        FROM client c","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-10T01:55:03.011001Z","level":"info","event":"        LEFT JOIN orders o ON c.id = o.client_id","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-10T01:55:03.011210Z","level":"info","event":"        GROUP BY c.id, c.name, c.email, c.phone, c.address","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-10T01:55:03.011450Z","level":"info","event":"    ': relation \"client\" does not exist","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-10T01:55:03.011624Z","level":"info","event":"LINE 10:         FROM client c","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-10T01:55:03.011808Z","level":"info","event":"                      ^","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-10T01:55:03.012023Z","level":"info","event":"","chan":"stdout","logger":"task"}
