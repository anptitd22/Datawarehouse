{"timestamp":"2025-06-17T19:00:03.267881","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-06-17T19:00:03.270497","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/etl_pipeline.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-06-17T19:00:07.126230Z","level":"info","event":"Task instance is in running state","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-17T19:00:07.127980Z","level":"info","event":" Previous state of the Task instance: queued","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-17T19:00:07.129475Z","level":"info","event":"Current task name:dim_customer_group.extract","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-17T19:00:07.130597Z","level":"info","event":"Dag name:etl_pipeline","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-17T19:00:08.256090Z","level":"error","event":"WARNING: Using incubator modules: jdk.incubator.vector","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:11.311852Z","level":"error","event":":: loading settings :: url = jar:file:/home/airflow/.local/lib/python3.12/site-packages/pyspark/jars/ivy-2.5.3.jar!/org/apache/ivy/core/settings/ivysettings.xml","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:11.472256Z","level":"error","event":"Ivy Default Cache set to: /home/airflow/.ivy2.5.2/cache","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:11.472886Z","level":"error","event":"The jars for the packages stored in: /home/airflow/.ivy2.5.2/jars","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:11.474661Z","level":"error","event":"org.postgresql#postgresql added as a dependency","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:11.476267Z","level":"error","event":":: resolving dependencies :: org.apache.spark#spark-submit-parent-eca78dd0-6018-4700-b8c5-b06f0552ee41;1.0","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:11.477095Z","level":"error","event":"\tconfs: [default]","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:11.643705Z","level":"error","event":"\tfound org.postgresql#postgresql;42.7.1 in central","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:11.674843Z","level":"error","event":"\tfound org.checkerframework#checker-qual;3.41.0 in central","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:11.693487Z","level":"error","event":":: resolution report :: resolve 211ms :: artifacts dl 7ms","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:11.694231Z","level":"error","event":"\t:: modules in use:","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:11.694850Z","level":"error","event":"\torg.checkerframework#checker-qual;3.41.0 from central in [default]","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:11.695345Z","level":"error","event":"\torg.postgresql#postgresql;42.7.1 from central in [default]","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:11.695810Z","level":"error","event":"\t---------------------------------------------------------------------","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:11.696313Z","level":"error","event":"\t|                  |            modules            ||   artifacts   |","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:11.696846Z","level":"error","event":"\t|       conf       | number| search|dwnlded|evicted|| number|dwnlded|","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:11.698252Z","level":"error","event":"\t---------------------------------------------------------------------","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:11.699072Z","level":"error","event":"\t|      default     |   2   |   0   |   0   |   0   ||   2   |   0   |","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:11.699521Z","level":"error","event":"\t---------------------------------------------------------------------","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:11.700098Z","level":"error","event":":: retrieving :: org.apache.spark#spark-submit-parent-eca78dd0-6018-4700-b8c5-b06f0552ee41","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:11.700479Z","level":"error","event":"\tconfs: [default]","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:11.707344Z","level":"error","event":"\t0 artifacts copied, 2 already retrieved (0kB/7ms)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:12.008100Z","level":"error","event":"25/06/17 19:00:12 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:12.238314Z","level":"error","event":"Using Spark's default log4j profile: org/apache/spark/log4j2-defaults.properties","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:12.239246Z","level":"error","event":"Setting default log level to \"WARN\".","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:12.239798Z","level":"error","event":"To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:16.245780Z","level":"error","event":"25/06/17 19:00:16 WARN StandaloneAppClient$ClientEndpoint: Failed to connect to master spark-master:7077","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:16.247932Z","level":"error","event":"org.apache.spark.SparkException: Exception thrown in awaitResult:","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:16.249425Z","level":"error","event":"\tat org.apache.spark.util.SparkThreadUtils$.awaitResult(SparkThreadUtils.scala:53)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:16.250613Z","level":"error","event":"\tat org.apache.spark.util.ThreadUtils$.awaitResult(ThreadUtils.scala:342)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:16.251883Z","level":"error","event":"\tat org.apache.spark.rpc.RpcTimeout.awaitResult(RpcTimeout.scala:75)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:16.252764Z","level":"error","event":"\tat org.apache.spark.rpc.RpcEnv.setupEndpointRefByURI(RpcEnv.scala:102)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:16.253205Z","level":"error","event":"\tat org.apache.spark.rpc.RpcEnv.setupEndpointRef(RpcEnv.scala:110)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:16.254360Z","level":"error","event":"\tat org.apache.spark.deploy.client.StandaloneAppClient$ClientEndpoint$$anon$1.run(StandaloneAppClient.scala:110)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:16.254768Z","level":"error","event":"\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:16.255225Z","level":"error","event":"\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:16.255581Z","level":"error","event":"\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:16.257114Z","level":"error","event":"\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:16.257481Z","level":"error","event":"\tat java.base/java.lang.Thread.run(Thread.java:840)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:16.259023Z","level":"error","event":"Caused by: java.lang.RuntimeException: java.io.InvalidClassException: org.apache.spark.rpc.netty.RpcEndpointVerifier$CheckExistence; local class incompatible: stream classdesc serialVersionUID = 5378738997755484868, local class serialVersionUID = 7789290765573734431","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:16.260190Z","level":"error","event":"\tat java.base/java.io.ObjectStreamClass.initNonProxy(Unknown Source)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:16.260842Z","level":"error","event":"\tat java.base/java.io.ObjectInputStream.readNonProxyDesc(Unknown Source)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:16.261342Z","level":"error","event":"\tat java.base/java.io.ObjectInputStream.readClassDesc(Unknown Source)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:16.261724Z","level":"error","event":"\tat java.base/java.io.ObjectInputStream.readOrdinaryObject(Unknown Source)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:16.263679Z","level":"error","event":"\tat java.base/java.io.ObjectInputStream.readObject0(Unknown Source)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:16.265259Z","level":"error","event":"\tat java.base/java.io.ObjectInputStream.readObject(Unknown Source)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:16.265880Z","level":"error","event":"\tat java.base/java.io.ObjectInputStream.readObject(Unknown Source)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:16.266345Z","level":"error","event":"\tat org.apache.spark.serializer.JavaDeserializationStream.readObject(JavaSerializer.scala:87)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:16.266903Z","level":"error","event":"\tat org.apache.spark.serializer.JavaSerializerInstance.deserialize(JavaSerializer.scala:123)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:16.267383Z","level":"error","event":"\tat org.apache.spark.rpc.netty.NettyRpcEnv.$anonfun$deserialize$2(NettyRpcEnv.scala:299)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:16.267850Z","level":"error","event":"\tat scala.util.DynamicVariable.withValue(DynamicVariable.scala:62)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:16.268251Z","level":"error","event":"\tat org.apache.spark.rpc.netty.NettyRpcEnv.deserialize(NettyRpcEnv.scala:352)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:16.268607Z","level":"error","event":"\tat org.apache.spark.rpc.netty.NettyRpcEnv.$anonfun$deserialize$1(NettyRpcEnv.scala:298)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:16.269314Z","level":"error","event":"\tat scala.util.DynamicVariable.withValue(DynamicVariable.scala:62)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:16.269759Z","level":"error","event":"\tat org.apache.spark.rpc.netty.NettyRpcEnv.deserialize(NettyRpcEnv.scala:298)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:16.270143Z","level":"error","event":"\tat org.apache.spark.rpc.netty.RequestMessage$.apply(NettyRpcEnv.scala:646)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:16.270514Z","level":"error","event":"\tat org.apache.spark.rpc.netty.NettyRpcHandler.internalReceive(NettyRpcEnv.scala:697)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:16.270839Z","level":"error","event":"\tat org.apache.spark.rpc.netty.NettyRpcHandler.receive(NettyRpcEnv.scala:682)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:16.271193Z","level":"error","event":"\tat org.apache.spark.network.server.TransportRequestHandler.processRpcRequest(TransportRequestHandler.java:163)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:16.274590Z","level":"error","event":"\tat org.apache.spark.network.server.TransportRequestHandler.handle(TransportRequestHandler.java:109)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:16.275462Z","level":"error","event":"\tat org.apache.spark.network.server.TransportChannelHandler.channelRead0(TransportChannelHandler.java:140)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:16.276122Z","level":"error","event":"\tat org.apache.spark.network.server.TransportChannelHandler.channelRead0(TransportChannelHandler.java:53)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:16.276618Z","level":"error","event":"\tat io.netty.channel.SimpleChannelInboundHandler.channelRead(SimpleChannelInboundHandler.java:99)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:16.277062Z","level":"error","event":"\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:16.277902Z","level":"error","event":"\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:16.279652Z","level":"error","event":"\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:16.280407Z","level":"error","event":"\tat io.netty.handler.timeout.IdleStateHandler.channelRead(IdleStateHandler.java:286)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:16.280906Z","level":"error","event":"\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:16.281341Z","level":"error","event":"\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:16.281775Z","level":"error","event":"\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:16.282142Z","level":"error","event":"\tat io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:103)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:16.282825Z","level":"error","event":"\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:16.283406Z","level":"error","event":"\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:16.283876Z","level":"error","event":"\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:16.284263Z","level":"error","event":"\tat org.apache.spark.network.util.TransportFrameDecoder.channelRead(TransportFrameDecoder.java:102)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:16.284643Z","level":"error","event":"\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:16.285205Z","level":"error","event":"\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:16.285640Z","level":"error","event":"\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:16.286226Z","level":"error","event":"\tat io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:16.286672Z","level":"error","event":"\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:16.287139Z","level":"error","event":"\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:16.287532Z","level":"error","event":"\tat io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:16.287896Z","level":"error","event":"\tat io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:16.288264Z","level":"error","event":"\tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:16.288739Z","level":"error","event":"\tat io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:16.289101Z","level":"error","event":"\tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:16.289456Z","level":"error","event":"\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:16.289946Z","level":"error","event":"\tat io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:16.290348Z","level":"error","event":"\tat io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:16.290811Z","level":"error","event":"\tat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:16.291203Z","level":"error","event":"\tat java.base/java.lang.Thread.run(Unknown Source)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:16.291613Z","level":"error","event":"","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:16.291958Z","level":"error","event":"\tat org.apache.spark.network.client.TransportResponseHandler.handle(TransportResponseHandler.java:217)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:16.292367Z","level":"error","event":"\tat org.apache.spark.network.server.TransportChannelHandler.channelRead0(TransportChannelHandler.java:145)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:16.293202Z","level":"error","event":"\tat org.apache.spark.network.server.TransportChannelHandler.channelRead0(TransportChannelHandler.java:55)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:16.293696Z","level":"error","event":"\tat io.netty.channel.SimpleChannelInboundHandler.channelRead(SimpleChannelInboundHandler.java:99)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:16.294138Z","level":"error","event":"\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:16.294482Z","level":"error","event":"\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:16.294820Z","level":"error","event":"\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:16.295135Z","level":"error","event":"\tat io.netty.handler.timeout.IdleStateHandler.channelRead(IdleStateHandler.java:289)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:16.295480Z","level":"error","event":"\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:16.295802Z","level":"error","event":"\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:16.296162Z","level":"error","event":"\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:16.296489Z","level":"error","event":"\tat io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:16.296804Z","level":"error","event":"\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:16.297133Z","level":"error","event":"\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:16.297657Z","level":"error","event":"\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:16.298079Z","level":"error","event":"\tat org.apache.spark.network.util.TransportFrameDecoder.channelRead(TransportFrameDecoder.java:102)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:16.298427Z","level":"error","event":"\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:16.298744Z","level":"error","event":"\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:16.299153Z","level":"error","event":"\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:16.299492Z","level":"error","event":"\tat io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:16.299860Z","level":"error","event":"\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:16.300332Z","level":"error","event":"\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:16.300699Z","level":"error","event":"\tat io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:16.301021Z","level":"error","event":"\tat io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:16.301364Z","level":"error","event":"\tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:16.301665Z","level":"error","event":"\tat io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:16.302045Z","level":"error","event":"\tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:16.302359Z","level":"error","event":"\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:16.302767Z","level":"error","event":"\tat io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:16.303116Z","level":"error","event":"\tat io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:16.303422Z","level":"error","event":"\tat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:16.303730Z","level":"error","event":"\t... 1 more","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:35.289825Z","level":"error","event":"25/06/17 19:00:35 WARN StandaloneAppClient$ClientEndpoint: Failed to connect to master spark-master:7077","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:35.290525Z","level":"error","event":"org.apache.spark.SparkException: Exception thrown in awaitResult:","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:35.290990Z","level":"error","event":"\tat org.apache.spark.util.SparkThreadUtils$.awaitResult(SparkThreadUtils.scala:53)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:35.291355Z","level":"error","event":"\tat org.apache.spark.util.ThreadUtils$.awaitResult(ThreadUtils.scala:342)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:35.291696Z","level":"error","event":"\tat org.apache.spark.rpc.RpcTimeout.awaitResult(RpcTimeout.scala:75)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:35.291988Z","level":"error","event":"\tat org.apache.spark.rpc.RpcEnv.setupEndpointRefByURI(RpcEnv.scala:102)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:35.292237Z","level":"error","event":"\tat org.apache.spark.rpc.RpcEnv.setupEndpointRef(RpcEnv.scala:110)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:35.292512Z","level":"error","event":"\tat org.apache.spark.deploy.client.StandaloneAppClient$ClientEndpoint$$anon$1.run(StandaloneAppClient.scala:110)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:35.292797Z","level":"error","event":"\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:35.293243Z","level":"error","event":"\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:35.293627Z","level":"error","event":"\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:35.293915Z","level":"error","event":"\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:35.294231Z","level":"error","event":"\tat java.base/java.lang.Thread.run(Thread.java:840)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:35.294564Z","level":"error","event":"Caused by: java.lang.RuntimeException: java.io.InvalidClassException: org.apache.spark.rpc.netty.RpcEndpointVerifier$CheckExistence; local class incompatible: stream classdesc serialVersionUID = 5378738997755484868, local class serialVersionUID = 7789290765573734431","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:35.294849Z","level":"error","event":"\tat java.base/java.io.ObjectStreamClass.initNonProxy(Unknown Source)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:35.295187Z","level":"error","event":"\tat java.base/java.io.ObjectInputStream.readNonProxyDesc(Unknown Source)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:35.295473Z","level":"error","event":"\tat java.base/java.io.ObjectInputStream.readClassDesc(Unknown Source)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:35.295723Z","level":"error","event":"\tat java.base/java.io.ObjectInputStream.readOrdinaryObject(Unknown Source)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:35.295962Z","level":"error","event":"\tat java.base/java.io.ObjectInputStream.readObject0(Unknown Source)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:35.296237Z","level":"error","event":"\tat java.base/java.io.ObjectInputStream.readObject(Unknown Source)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:35.296492Z","level":"error","event":"\tat java.base/java.io.ObjectInputStream.readObject(Unknown Source)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:35.296762Z","level":"error","event":"\tat org.apache.spark.serializer.JavaDeserializationStream.readObject(JavaSerializer.scala:87)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:35.297047Z","level":"error","event":"\tat org.apache.spark.serializer.JavaSerializerInstance.deserialize(JavaSerializer.scala:123)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:35.297306Z","level":"error","event":"\tat org.apache.spark.rpc.netty.NettyRpcEnv.$anonfun$deserialize$2(NettyRpcEnv.scala:299)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:35.297590Z","level":"error","event":"\tat scala.util.DynamicVariable.withValue(DynamicVariable.scala:62)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:35.297892Z","level":"error","event":"\tat org.apache.spark.rpc.netty.NettyRpcEnv.deserialize(NettyRpcEnv.scala:352)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:35.298243Z","level":"error","event":"\tat org.apache.spark.rpc.netty.NettyRpcEnv.$anonfun$deserialize$1(NettyRpcEnv.scala:298)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:35.298541Z","level":"error","event":"\tat scala.util.DynamicVariable.withValue(DynamicVariable.scala:62)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:35.298814Z","level":"error","event":"\tat org.apache.spark.rpc.netty.NettyRpcEnv.deserialize(NettyRpcEnv.scala:298)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:35.299079Z","level":"error","event":"\tat org.apache.spark.rpc.netty.RequestMessage$.apply(NettyRpcEnv.scala:646)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:35.299349Z","level":"error","event":"\tat org.apache.spark.rpc.netty.NettyRpcHandler.internalReceive(NettyRpcEnv.scala:697)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:35.299638Z","level":"error","event":"\tat org.apache.spark.rpc.netty.NettyRpcHandler.receive(NettyRpcEnv.scala:682)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:35.299912Z","level":"error","event":"\tat org.apache.spark.network.server.TransportRequestHandler.processRpcRequest(TransportRequestHandler.java:163)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:35.300166Z","level":"error","event":"\tat org.apache.spark.network.server.TransportRequestHandler.handle(TransportRequestHandler.java:109)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:35.300422Z","level":"error","event":"\tat org.apache.spark.network.server.TransportChannelHandler.channelRead0(TransportChannelHandler.java:140)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:35.300710Z","level":"error","event":"\tat org.apache.spark.network.server.TransportChannelHandler.channelRead0(TransportChannelHandler.java:53)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:35.301154Z","level":"error","event":"\tat io.netty.channel.SimpleChannelInboundHandler.channelRead(SimpleChannelInboundHandler.java:99)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:35.301452Z","level":"error","event":"\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:35.301735Z","level":"error","event":"\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:35.302025Z","level":"error","event":"\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:35.302310Z","level":"error","event":"\tat io.netty.handler.timeout.IdleStateHandler.channelRead(IdleStateHandler.java:286)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:35.302601Z","level":"error","event":"\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:35.302867Z","level":"error","event":"\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:35.303196Z","level":"error","event":"\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:35.303456Z","level":"error","event":"\tat io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:103)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:35.303863Z","level":"error","event":"\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:35.304101Z","level":"error","event":"\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:35.304330Z","level":"error","event":"\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:35.304587Z","level":"error","event":"\tat org.apache.spark.network.util.TransportFrameDecoder.channelRead(TransportFrameDecoder.java:102)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:35.304827Z","level":"error","event":"\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:35.305117Z","level":"error","event":"\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:35.305451Z","level":"error","event":"\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:35.305724Z","level":"error","event":"\tat io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:35.306005Z","level":"error","event":"\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:35.306274Z","level":"error","event":"\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:35.306519Z","level":"error","event":"\tat io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:35.306792Z","level":"error","event":"\tat io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:35.307075Z","level":"error","event":"\tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:35.307330Z","level":"error","event":"\tat io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:35.307612Z","level":"error","event":"\tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:35.307907Z","level":"error","event":"\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:35.308172Z","level":"error","event":"\tat io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:35.308441Z","level":"error","event":"\tat io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:35.308693Z","level":"error","event":"\tat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:35.308973Z","level":"error","event":"\tat java.base/java.lang.Thread.run(Unknown Source)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:35.309249Z","level":"error","event":"","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:35.309605Z","level":"error","event":"\tat org.apache.spark.network.client.TransportResponseHandler.handle(TransportResponseHandler.java:217)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:35.309948Z","level":"error","event":"\tat org.apache.spark.network.server.TransportChannelHandler.channelRead0(TransportChannelHandler.java:145)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:35.310295Z","level":"error","event":"\tat org.apache.spark.network.server.TransportChannelHandler.channelRead0(TransportChannelHandler.java:55)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:35.310609Z","level":"error","event":"\tat io.netty.channel.SimpleChannelInboundHandler.channelRead(SimpleChannelInboundHandler.java:99)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:35.310981Z","level":"error","event":"\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:35.311289Z","level":"error","event":"\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:35.311582Z","level":"error","event":"\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:35.311821Z","level":"error","event":"\tat io.netty.handler.timeout.IdleStateHandler.channelRead(IdleStateHandler.java:289)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:35.312086Z","level":"error","event":"\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:35.312374Z","level":"error","event":"\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:35.312634Z","level":"error","event":"\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:35.312908Z","level":"error","event":"\tat io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:35.313183Z","level":"error","event":"\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:35.313558Z","level":"error","event":"\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:35.313879Z","level":"error","event":"\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:35.314162Z","level":"error","event":"\tat org.apache.spark.network.util.TransportFrameDecoder.channelRead(TransportFrameDecoder.java:102)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:35.314446Z","level":"error","event":"\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:35.314749Z","level":"error","event":"\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:35.315040Z","level":"error","event":"\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:35.315333Z","level":"error","event":"\tat io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:35.315622Z","level":"error","event":"\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:35.315962Z","level":"error","event":"\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:35.316226Z","level":"error","event":"\tat io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:35.316493Z","level":"error","event":"\tat io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:35.316765Z","level":"error","event":"\tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:35.317045Z","level":"error","event":"\tat io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:35.317339Z","level":"error","event":"\tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:35.317604Z","level":"error","event":"\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:35.317856Z","level":"error","event":"\tat io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:35.318121Z","level":"error","event":"\tat io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:35.318364Z","level":"error","event":"\tat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:35.318698Z","level":"error","event":"\t... 1 more","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:55.289723Z","level":"error","event":"25/06/17 19:00:55 WARN StandaloneAppClient$ClientEndpoint: Failed to connect to master spark-master:7077","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:55.290418Z","level":"error","event":"org.apache.spark.SparkException: Exception thrown in awaitResult:","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:55.290881Z","level":"error","event":"\tat org.apache.spark.util.SparkThreadUtils$.awaitResult(SparkThreadUtils.scala:53)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:55.291619Z","level":"error","event":"\tat org.apache.spark.util.ThreadUtils$.awaitResult(ThreadUtils.scala:342)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:55.292026Z","level":"error","event":"\tat org.apache.spark.rpc.RpcTimeout.awaitResult(RpcTimeout.scala:75)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:55.292375Z","level":"error","event":"\tat org.apache.spark.rpc.RpcEnv.setupEndpointRefByURI(RpcEnv.scala:102)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:55.292665Z","level":"error","event":"\tat org.apache.spark.rpc.RpcEnv.setupEndpointRef(RpcEnv.scala:110)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:55.292988Z","level":"error","event":"\tat org.apache.spark.deploy.client.StandaloneAppClient$ClientEndpoint$$anon$1.run(StandaloneAppClient.scala:110)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:55.293305Z","level":"error","event":"\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:55.293618Z","level":"error","event":"\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:55.293935Z","level":"error","event":"\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:55.294311Z","level":"error","event":"\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:55.294672Z","level":"error","event":"\tat java.base/java.lang.Thread.run(Thread.java:840)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:55.295082Z","level":"error","event":"Caused by: java.lang.RuntimeException: java.io.InvalidClassException: org.apache.spark.rpc.netty.RpcEndpointVerifier$CheckExistence; local class incompatible: stream classdesc serialVersionUID = 5378738997755484868, local class serialVersionUID = 7789290765573734431","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:55.295398Z","level":"error","event":"\tat java.base/java.io.ObjectStreamClass.initNonProxy(Unknown Source)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:55.295637Z","level":"error","event":"\tat java.base/java.io.ObjectInputStream.readNonProxyDesc(Unknown Source)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:55.295959Z","level":"error","event":"\tat java.base/java.io.ObjectInputStream.readClassDesc(Unknown Source)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:55.296232Z","level":"error","event":"\tat java.base/java.io.ObjectInputStream.readOrdinaryObject(Unknown Source)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:55.296431Z","level":"error","event":"\tat java.base/java.io.ObjectInputStream.readObject0(Unknown Source)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:55.296637Z","level":"error","event":"\tat java.base/java.io.ObjectInputStream.readObject(Unknown Source)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:55.296898Z","level":"error","event":"\tat java.base/java.io.ObjectInputStream.readObject(Unknown Source)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:55.297268Z","level":"error","event":"\tat org.apache.spark.serializer.JavaDeserializationStream.readObject(JavaSerializer.scala:87)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:55.297573Z","level":"error","event":"\tat org.apache.spark.serializer.JavaSerializerInstance.deserialize(JavaSerializer.scala:123)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:55.297856Z","level":"error","event":"\tat org.apache.spark.rpc.netty.NettyRpcEnv.$anonfun$deserialize$2(NettyRpcEnv.scala:299)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:55.298141Z","level":"error","event":"\tat scala.util.DynamicVariable.withValue(DynamicVariable.scala:62)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:55.298377Z","level":"error","event":"\tat org.apache.spark.rpc.netty.NettyRpcEnv.deserialize(NettyRpcEnv.scala:352)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:55.298662Z","level":"error","event":"\tat org.apache.spark.rpc.netty.NettyRpcEnv.$anonfun$deserialize$1(NettyRpcEnv.scala:298)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:55.298923Z","level":"error","event":"\tat scala.util.DynamicVariable.withValue(DynamicVariable.scala:62)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:55.299145Z","level":"error","event":"\tat org.apache.spark.rpc.netty.NettyRpcEnv.deserialize(NettyRpcEnv.scala:298)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:55.299402Z","level":"error","event":"\tat org.apache.spark.rpc.netty.RequestMessage$.apply(NettyRpcEnv.scala:646)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:55.299624Z","level":"error","event":"\tat org.apache.spark.rpc.netty.NettyRpcHandler.internalReceive(NettyRpcEnv.scala:697)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:55.299851Z","level":"error","event":"\tat org.apache.spark.rpc.netty.NettyRpcHandler.receive(NettyRpcEnv.scala:682)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:55.300109Z","level":"error","event":"\tat org.apache.spark.network.server.TransportRequestHandler.processRpcRequest(TransportRequestHandler.java:163)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:55.300374Z","level":"error","event":"\tat org.apache.spark.network.server.TransportRequestHandler.handle(TransportRequestHandler.java:109)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:55.300651Z","level":"error","event":"\tat org.apache.spark.network.server.TransportChannelHandler.channelRead0(TransportChannelHandler.java:140)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:55.301003Z","level":"error","event":"\tat org.apache.spark.network.server.TransportChannelHandler.channelRead0(TransportChannelHandler.java:53)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:55.301305Z","level":"error","event":"\tat io.netty.channel.SimpleChannelInboundHandler.channelRead(SimpleChannelInboundHandler.java:99)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:55.301623Z","level":"error","event":"\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:55.301891Z","level":"error","event":"\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:55.302160Z","level":"error","event":"\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:55.302408Z","level":"error","event":"\tat io.netty.handler.timeout.IdleStateHandler.channelRead(IdleStateHandler.java:286)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:55.302677Z","level":"error","event":"\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:55.302939Z","level":"error","event":"\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:55.303188Z","level":"error","event":"\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:55.303433Z","level":"error","event":"\tat io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:103)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:55.303896Z","level":"error","event":"\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:55.304229Z","level":"error","event":"\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:55.304550Z","level":"error","event":"\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:55.304852Z","level":"error","event":"\tat org.apache.spark.network.util.TransportFrameDecoder.channelRead(TransportFrameDecoder.java:102)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:55.305122Z","level":"error","event":"\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:55.305443Z","level":"error","event":"\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:55.305740Z","level":"error","event":"\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:55.306009Z","level":"error","event":"\tat io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:55.306318Z","level":"error","event":"\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:55.306613Z","level":"error","event":"\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:55.306922Z","level":"error","event":"\tat io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:55.307304Z","level":"error","event":"\tat io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:55.307611Z","level":"error","event":"\tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:55.307921Z","level":"error","event":"\tat io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:55.308201Z","level":"error","event":"\tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:55.308468Z","level":"error","event":"\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:55.308787Z","level":"error","event":"\tat io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:55.309216Z","level":"error","event":"\tat io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:55.309485Z","level":"error","event":"\tat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:55.309760Z","level":"error","event":"\tat java.base/java.lang.Thread.run(Unknown Source)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:55.310073Z","level":"error","event":"","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:55.310344Z","level":"error","event":"\tat org.apache.spark.network.client.TransportResponseHandler.handle(TransportResponseHandler.java:217)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:55.310676Z","level":"error","event":"\tat org.apache.spark.network.server.TransportChannelHandler.channelRead0(TransportChannelHandler.java:145)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:55.311013Z","level":"error","event":"\tat org.apache.spark.network.server.TransportChannelHandler.channelRead0(TransportChannelHandler.java:55)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:55.311314Z","level":"error","event":"\tat io.netty.channel.SimpleChannelInboundHandler.channelRead(SimpleChannelInboundHandler.java:99)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:55.311632Z","level":"error","event":"\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:55.311940Z","level":"error","event":"\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:55.312260Z","level":"error","event":"\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:55.312653Z","level":"error","event":"\tat io.netty.handler.timeout.IdleStateHandler.channelRead(IdleStateHandler.java:289)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:55.312981Z","level":"error","event":"\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:55.313266Z","level":"error","event":"\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:55.313703Z","level":"error","event":"\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:55.314026Z","level":"error","event":"\tat io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:55.314374Z","level":"error","event":"\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:55.314753Z","level":"error","event":"\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:55.315107Z","level":"error","event":"\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:55.315398Z","level":"error","event":"\tat org.apache.spark.network.util.TransportFrameDecoder.channelRead(TransportFrameDecoder.java:102)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:55.315765Z","level":"error","event":"\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:55.316109Z","level":"error","event":"\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:55.316429Z","level":"error","event":"\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:55.316791Z","level":"error","event":"\tat io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:55.317085Z","level":"error","event":"\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:55.317560Z","level":"error","event":"\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:55.317892Z","level":"error","event":"\tat io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:55.318221Z","level":"error","event":"\tat io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:55.318549Z","level":"error","event":"\tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:55.318819Z","level":"error","event":"\tat io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:55.319184Z","level":"error","event":"\tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:55.319530Z","level":"error","event":"\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:55.319887Z","level":"error","event":"\tat io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:55.320239Z","level":"error","event":"\tat io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:55.320580Z","level":"error","event":"\tat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:00:55.320915Z","level":"error","event":"\t... 1 more","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:01:15.417032Z","level":"error","event":"25/06/17 19:01:15 WARN StandaloneSchedulerBackend: Application ID is not initialized yet.","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:01:15.419863Z","level":"error","event":"25/06/17 19:01:15 ERROR StandaloneSchedulerBackend: Application has been killed. Reason: All masters are unresponsive! Giving up.","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:01:15.934802Z","level":"error","event":"25/06/17 19:01:15 WARN StandaloneAppClient$ClientEndpoint: Drop UnregisterApplication(null) because has not yet connected to master","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T19:01:18.350341","level":"error","event":"Task failed with exception","logger":"task","error_detail":[{"exc_type":"Py4JJavaError","exc_value":"An error occurred while calling None.org.apache.spark.sql.classic.SparkSession.\n: java.lang.IllegalStateException: Cannot call methods on a stopped SparkContext.\nThis stopped SparkContext was created at:\n\norg.apache.spark.api.java.JavaSparkContext.<init>(JavaSparkContext.scala:59)\njava.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\njava.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\njava.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)\njava.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:247)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:238)\npy4j.commands.ConstructorCommand.invokeConstructor(ConstructorCommand.java:80)\npy4j.commands.ConstructorCommand.execute(ConstructorCommand.java:69)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)\npy4j.ClientServerConnection.run(ClientServerConnection.java:108)\njava.base/java.lang.Thread.run(Thread.java:840)\n\nAnd it was stopped at:\n\norg.apache.spark.SparkContext$$anon$3.run(SparkContext.scala:2284)\n\nThe currently active SparkContext was created at:\n\n(No active SparkContext.)\n         \n\tat org.apache.spark.SparkContext.assertNotStopped(SparkContext.scala:128)\n\tat org.apache.spark.sql.classic.SparkSession.<init>(SparkSession.scala:124)\n\tat org.apache.spark.sql.classic.SparkSession.<init>(SparkSession.scala:117)\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)\n\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:247)\n\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\n\tat py4j.Gateway.invoke(Gateway.java:238)\n\tat py4j.commands.ConstructorCommand.invokeConstructor(ConstructorCommand.java:80)\n\tat py4j.commands.ConstructorCommand.execute(ConstructorCommand.java:69)\n\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)\n\tat py4j.ClientServerConnection.run(ClientServerConnection.java:108)\n\tat java.base/java.lang.Thread.run(Thread.java:840)\n","exc_notes":[],"syntax_error":null,"is_cause":false,"frames":[{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/execution_time/task_runner.py","lineno":825,"name":"run"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/execution_time/task_runner.py","lineno":1088,"name":"_execute_task"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/bases/operator.py","lineno":408,"name":"wrapper"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/providers/standard/operators/python.py","lineno":212,"name":"execute"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/providers/standard/operators/python.py","lineno":235,"name":"execute_callable"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/execution_time/callback_runner.py","lineno":81,"name":"run"},{"filename":"/opt/airflow/dags/etl_dim_customer.py","lineno":78,"name":"extract_customer"},{"filename":"/opt/airflow/dags/etl_dim_customer.py","lineno":53,"name":"get_spark"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/pyspark/sql/session.py","lineno":559,"name":"getOrCreate"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/pyspark/sql/session.py","lineno":641,"name":"__init__"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/py4j/java_gateway.py","lineno":1627,"name":"__call__"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/py4j/protocol.py","lineno":327,"name":"get_return_value"}]}]}
{"timestamp":"2025-06-17T19:01:18.420958Z","level":"info","event":"Task instance in failure state","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-17T19:01:18.422113Z","level":"info","event":"Task start","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-17T19:01:18.422845Z","level":"info","event":"Task:<Task(PythonOperator): dim_customer_group.extract>","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-17T19:01:18.423354Z","level":"info","event":"Failure caused by An error occurred while calling None.org.apache.spark.sql.classic.SparkSession.","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-17T19:01:18.423918Z","level":"info","event":": java.lang.IllegalStateException: Cannot call methods on a stopped SparkContext.","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-17T19:01:18.424824Z","level":"info","event":"This stopped SparkContext was created at:","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-17T19:01:18.425326Z","level":"info","event":"","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-17T19:01:18.425805Z","level":"info","event":"org.apache.spark.api.java.JavaSparkContext.<init>(JavaSparkContext.scala:59)","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-17T19:01:18.426104Z","level":"info","event":"java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-17T19:01:18.426367Z","level":"info","event":"java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-17T19:01:18.426620Z","level":"info","event":"java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-17T19:01:18.426838Z","level":"info","event":"java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-17T19:01:18.427096Z","level":"info","event":"java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-17T19:01:18.427364Z","level":"info","event":"py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:247)","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-17T19:01:18.427616Z","level":"info","event":"py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-17T19:01:18.427908Z","level":"info","event":"py4j.Gateway.invoke(Gateway.java:238)","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-17T19:01:18.428616Z","level":"info","event":"py4j.commands.ConstructorCommand.invokeConstructor(ConstructorCommand.java:80)","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-17T19:01:18.429357Z","level":"info","event":"py4j.commands.ConstructorCommand.execute(ConstructorCommand.java:69)","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-17T19:01:18.429766Z","level":"info","event":"py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-17T19:01:18.430106Z","level":"info","event":"py4j.ClientServerConnection.run(ClientServerConnection.java:108)","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-17T19:01:18.430419Z","level":"info","event":"java.base/java.lang.Thread.run(Thread.java:840)","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-17T19:01:18.430902Z","level":"info","event":"","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-17T19:01:18.431211Z","level":"info","event":"And it was stopped at:","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-17T19:01:18.431518Z","level":"info","event":"","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-17T19:01:18.431963Z","level":"info","event":"org.apache.spark.SparkContext$$anon$3.run(SparkContext.scala:2284)","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-17T19:01:18.432388Z","level":"info","event":"","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-17T19:01:18.432759Z","level":"info","event":"The currently active SparkContext was created at:","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-17T19:01:18.433150Z","level":"info","event":"","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-17T19:01:18.433532Z","level":"info","event":"(No active SparkContext.)","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-17T19:01:18.433866Z","level":"info","event":"","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-17T19:01:18.434102Z","level":"info","event":"\tat org.apache.spark.SparkContext.assertNotStopped(SparkContext.scala:128)","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-17T19:01:18.434306Z","level":"info","event":"\tat org.apache.spark.sql.classic.SparkSession.<init>(SparkSession.scala:124)","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-17T19:01:18.434555Z","level":"info","event":"\tat org.apache.spark.sql.classic.SparkSession.<init>(SparkSession.scala:117)","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-17T19:01:18.434949Z","level":"info","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-17T19:01:18.435536Z","level":"info","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-17T19:01:18.436091Z","level":"info","event":"\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-17T19:01:18.436479Z","level":"info","event":"\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-17T19:01:18.436946Z","level":"info","event":"\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-17T19:01:18.437305Z","level":"info","event":"\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:247)","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-17T19:01:18.437994Z","level":"info","event":"\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-17T19:01:18.439416Z","level":"info","event":"\tat py4j.Gateway.invoke(Gateway.java:238)","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-17T19:01:18.439963Z","level":"info","event":"\tat py4j.commands.ConstructorCommand.invokeConstructor(ConstructorCommand.java:80)","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-17T19:01:18.440346Z","level":"info","event":"\tat py4j.commands.ConstructorCommand.execute(ConstructorCommand.java:69)","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-17T19:01:18.440657Z","level":"info","event":"\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-17T19:01:18.440927Z","level":"info","event":"\tat py4j.ClientServerConnection.run(ClientServerConnection.java:108)","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-17T19:01:18.441182Z","level":"info","event":"\tat java.base/java.lang.Thread.run(Thread.java:840)","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-17T19:01:18.441450Z","level":"info","event":"","chan":"stdout","logger":"task"}
