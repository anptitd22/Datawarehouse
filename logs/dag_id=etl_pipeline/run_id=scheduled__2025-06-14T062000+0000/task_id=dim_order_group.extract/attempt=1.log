{"timestamp":"2025-06-14T06:20:01.974516","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-06-14T06:20:01.975108","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/etl_pipeline.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-06-14T06:20:08.726054Z","level":"info","event":"Task instance is in running state","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-14T06:20:08.727085Z","level":"info","event":" Previous state of the Task instance: queued","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-14T06:20:08.727562Z","level":"info","event":"Current task name:dim_order_group.extract","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-14T06:20:08.727901Z","level":"info","event":"Dag name:etl_pipeline","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-14T06:20:02.125860","level":"info","event":"Secrets backends loaded for worker","count":1,"backend_classes":["EnvironmentVariablesBackend"],"logger":"supervisor"}
{"timestamp":"2025-06-14T06:20:08.726492","level":"info","event":"Connection Retrieved 'postgres_default'","logger":"airflow.hooks.base"}
{"timestamp":"2025-06-14T06:20:08.879593","level":"warning","event":"/opt/airflow/dags/etl_dim_order.py:6: UserWarning: pandas only supports SQLAlchemy connectable (engine/connection) or database string URI or sqlite3 DBAPI2 connection. Other DBAPI2 objects are not tested. Please consider using SQLAlchemy.\n  df = pd.read_sql(\"\"\"\n","logger":"py.warnings"}
{"timestamp":"2025-06-14T06:20:09.224389","level":"info","event":"Done. Returned value was:                                   order_id  ... payment_method\n0     ceb75388-97e9-4ea6-a0d0-97960ef33d64  ...            COD\n1     ceb75388-97e9-4ea6-a0d0-97960ef33d64  ...            COD\n2     2b7c7eff-d3b5-40e1-a3d5-568292f41dc2  ...            COD\n3     2b7c7eff-d3b5-40e1-a3d5-568292f41dc2  ...            COD\n4     d233b98f-ec25-4b71-b8cf-8e126d07b706  ...          VNPAY\n...                                    ...  ...            ...\n9337  5828f23f-d5f3-40c5-9c1c-294017b16116  ...            COD\n9338  b70f9304-ad17-4969-a1aa-210c8d3ea2a0  ...            COD\n9339  b1cac294-8cf9-4e93-b85e-2ea953293d38  ...          VNPAY\n9340  d44d4ca9-d4c1-4518-868c-bb04c1486fc9  ...          VNPAY\n9341  182fe051-d954-4cea-a5e5-1a88f5c8d228  ...            COD\n\n[9342 rows x 4 columns]","logger":"airflow.task.operators.airflow.providers.standard.operators.python.PythonOperator"}
{"timestamp":"2025-06-14T06:20:09.224755","level":"info","event":"Pushing xcom","ti":"RuntimeTaskInstance(id=UUID('01976d18-53e2-7b7f-9b5f-0205e02d2bd5'), task_id='dim_order_group.extract', dag_id='etl_pipeline', run_id='scheduled__2025-06-14T06:20:00+00:00', try_number=1, map_index=-1, hostname='6010199dfac5', context_carrier={}, task=<Task(PythonOperator): dim_order_group.extract>, bundle_instance=LocalDagBundle(name=dags-folder), max_tries=1, start_date=datetime.datetime(2025, 6, 14, 6, 20, 0, 679151, tzinfo=TzInfo(UTC)), end_date=None, is_mapped=False)","logger":"task"}
{"timestamp":"2025-06-14T06:20:10.156312Z","level":"info","event":"Task instance in success state","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-14T06:20:10.157051Z","level":"info","event":" Previous state of the Task instance: running","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-14T06:20:10.157505Z","level":"info","event":"Task operator:<Task(PythonOperator): dim_order_group.extract>","chan":"stdout","logger":"task"}
