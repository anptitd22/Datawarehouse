{"timestamp":"2025-06-14T15:53:27.676173","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-06-14T15:53:27.676834","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/etl_pipeline.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-06-14T15:53:27.892870Z","level":"error","event":"%3|1749916407.892|FAIL|rdkafka#producer-1| [thrd:localhost:9092/bootstrap]: localhost:9092/bootstrap: Connect to ipv4#127.0.0.1:9092 failed: Connection refused (after 0ms in state CONNECT)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-14T15:53:27.950544","level":"warning","event":"/opt/airflow/dags/etl_dim_customer.py:18: UserWarning: MessageFactory class is deprecated. Please use GetMessageClass() instead of MessageFactory.GetPrototype. MessageFactory class will be removed after 2024.\n  CustomerMessage = factory.GetPrototype(descriptor)\n","logger":"py.warnings"}
{"timestamp":"2025-06-14T15:53:28.003147Z","level":"info","event":"Task instance is in running state","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-14T15:53:28.004921Z","level":"info","event":" Previous state of the Task instance: queued","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-14T15:53:28.006175Z","level":"info","event":"Current task name:dim_customer_group.send_to_kafka","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-14T15:53:28.007069Z","level":"info","event":"Dag name:etl_pipeline","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-14T15:53:27.958646","level":"info","event":"Secrets backends loaded for worker","count":1,"backend_classes":["EnvironmentVariablesBackend"],"logger":"supervisor"}
{"timestamp":"2025-06-14T15:53:28.007123","level":"info","event":"Connection Retrieved 'postgres_default'","logger":"airflow.hooks.base"}
{"timestamp":"2025-06-14T15:53:28.025715","level":"warning","event":"/opt/airflow/dags/etl_dim_customer.py:33: UserWarning: pandas only supports SQLAlchemy connectable (engine/connection) or database string URI or sqlite3 DBAPI2 connection. Other DBAPI2 objects are not tested. Please consider using SQLAlchemy.\n  df = pd.read_sql(\"\"\"\n","logger":"py.warnings"}
{"timestamp":"2025-06-14T15:53:28.893952Z","level":"error","event":"%3|1749916408.893|FAIL|rdkafka#producer-1| [thrd:localhost:9092/bootstrap]: localhost:9092/bootstrap: Connect to ipv4#127.0.0.1:9092 failed: Connection refused (after 0ms in state CONNECT, 1 identical error(s) suppressed)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-14T15:53:57.921011Z","level":"error","event":"%3|1749916437.920|FAIL|rdkafka#producer-1| [thrd:localhost:9092/bootstrap]: localhost:9092/bootstrap: Connect to ipv4#127.0.0.1:9092 failed: Connection refused (after 0ms in state CONNECT, 57 identical error(s) suppressed)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-14T15:54:26.948780Z","level":"error","event":"%3|1749916466.948|FAIL|rdkafka#producer-1| [thrd:localhost:9092/bootstrap]: localhost:9092/bootstrap: Connect to ipv4#127.0.0.1:9092 failed: Connection refused (after 0ms in state CONNECT, 58 identical error(s) suppressed)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-14T15:54:55.977315Z","level":"error","event":"%3|1749916495.977|FAIL|rdkafka#producer-1| [thrd:localhost:9092/bootstrap]: localhost:9092/bootstrap: Connect to ipv4#127.0.0.1:9092 failed: Connection refused (after 0ms in state CONNECT, 58 identical error(s) suppressed)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-14T15:55:25.008184Z","level":"error","event":"%3|1749916525.007|FAIL|rdkafka#producer-1| [thrd:localhost:9092/bootstrap]: localhost:9092/bootstrap: Connect to ipv4#127.0.0.1:9092 failed: Connection refused (after 0ms in state CONNECT, 58 identical error(s) suppressed)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-14T15:55:35.183348Z","level":"error","event":"Server indicated the task shouldn't be running anymore. Terminating process","detail":{"detail":{"reason":"not_found","message":"Task Instance not found"}},"logger":"task"}
{"timestamp":"2025-06-14T15:55:35.338626Z","level":"error","event":"Task killed!","logger":"task"}
