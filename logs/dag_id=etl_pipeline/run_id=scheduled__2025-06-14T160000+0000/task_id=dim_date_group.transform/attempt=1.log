{"timestamp":"2025-06-14T16:00:02.692136","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-06-14T16:00:02.692641","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/etl_pipeline.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-06-14T16:00:02.861358","level":"warning","event":"/opt/airflow/dags/etl_dim_customer.py:18: UserWarning: MessageFactory class is deprecated. Please use GetMessageClass() instead of MessageFactory.GetPrototype. MessageFactory class will be removed after 2024.\n  CustomerMessage = factory.GetPrototype(descriptor)\n","logger":"py.warnings"}
{"timestamp":"2025-06-14T16:00:02.900847Z","level":"info","event":"Task instance is in running state","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-14T16:00:02.901385Z","level":"info","event":" Previous state of the Task instance: queued","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-14T16:00:02.901876Z","level":"info","event":"Current task name:dim_date_group.transform","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-14T16:00:02.902194Z","level":"info","event":"Dag name:etl_pipeline","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-14T16:00:02.867052","level":"info","event":"Secrets backends loaded for worker","count":1,"backend_classes":["EnvironmentVariablesBackend"],"logger":"supervisor"}
{"timestamp":"2025-06-14T16:00:02.902030","level":"info","event":"Connection Retrieved 'postgres_default'","logger":"airflow.hooks.base"}
{"timestamp":"2025-06-14T16:00:02.913740","level":"warning","event":"/opt/airflow/dags/etl_dim_date.py:8: UserWarning: pandas only supports SQLAlchemy connectable (engine/connection) or database string URI or sqlite3 DBAPI2 connection. Other DBAPI2 objects are not tested. Please consider using SQLAlchemy.\n  df = pd.read_sql(\"\"\"\n","logger":"py.warnings"}
{"timestamp":"2025-06-14T16:00:02.932482","level":"info","event":"Done. Returned value was:             date  day  week  month  quarter  year\n0     2022-01-01    1    52      1        1  2022\n1     2022-01-02    2    52      1        1  2022\n2     2022-01-03    3     1      1        1  2022\n3     2022-01-04    4     1      1        1  2022\n4     2022-01-05    5     1      1        1  2022\n...          ...  ...   ...    ...      ...   ...\n1456  2025-12-27   27    52     12        4  2025\n1457  2025-12-28   28    52     12        4  2025\n1458  2025-12-29   29     1     12        4  2025\n1459  2025-12-30   30     1     12        4  2025\n1460  2025-12-31   31     1     12        4  2025\n\n[1461 rows x 6 columns]","logger":"airflow.task.operators.airflow.providers.standard.operators.python.PythonOperator"}
{"timestamp":"2025-06-14T16:00:02.932879","level":"info","event":"Pushing xcom","ti":"RuntimeTaskInstance(id=UUID('01976f2b-5485-77ad-ab30-ccc4d53da29a'), task_id='dim_date_group.transform', dag_id='etl_pipeline', run_id='scheduled__2025-06-14T16:00:00+00:00', try_number=1, map_index=-1, hostname='b2bda57f10c1', context_carrier={}, task=<Task(PythonOperator): dim_date_group.transform>, bundle_instance=LocalDagBundle(name=dags-folder), max_tries=1, start_date=datetime.datetime(2025, 6, 14, 16, 0, 2, 60178, tzinfo=TzInfo(UTC)), end_date=None, is_mapped=False)","logger":"task"}
{"timestamp":"2025-06-14T16:00:02.983008Z","level":"info","event":"Task instance in success state","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-14T16:00:02.983536Z","level":"info","event":" Previous state of the Task instance: running","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-14T16:00:02.983851Z","level":"info","event":"Task operator:<Task(PythonOperator): dim_date_group.transform>","chan":"stdout","logger":"task"}
