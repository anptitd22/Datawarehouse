{"timestamp":"2025-06-17T18:50:02.138510","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-06-17T18:50:02.140933","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/etl_pipeline.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-06-17T18:50:02.691281Z","level":"info","event":"Task instance is in running state","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-17T18:50:02.692183Z","level":"info","event":" Previous state of the Task instance: queued","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-17T18:50:02.692783Z","level":"info","event":"Current task name:dim_customer_group.extract","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-17T18:50:02.693407Z","level":"info","event":"Dag name:etl_pipeline","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-17T18:50:04.279224Z","level":"error","event":"WARNING: Using incubator modules: jdk.incubator.vector","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:06.836831Z","level":"error","event":":: loading settings :: url = jar:file:/home/airflow/.local/lib/python3.12/site-packages/pyspark/jars/ivy-2.5.3.jar!/org/apache/ivy/core/settings/ivysettings.xml","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:07.001756Z","level":"error","event":"Ivy Default Cache set to: /home/airflow/.ivy2.5.2/cache","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:07.003025Z","level":"error","event":"The jars for the packages stored in: /home/airflow/.ivy2.5.2/jars","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:07.009566Z","level":"error","event":"org.postgresql#postgresql added as a dependency","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:07.011189Z","level":"error","event":":: resolving dependencies :: org.apache.spark#spark-submit-parent-00d5b7e2-e9af-4e07-882e-2cd345131a77;1.0","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:07.011664Z","level":"error","event":"\tconfs: [default]","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:11.014659Z","level":"error","event":"\tfound org.postgresql#postgresql;42.7.1 in central","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:11.563397Z","level":"error","event":"\tfound org.checkerframework#checker-qual;3.41.0 in central","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:11.777262Z","level":"error","event":"downloading https://repo1.maven.org/maven2/org/postgresql/postgresql/42.7.1/postgresql-42.7.1.jar ...","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:13.082663Z","level":"error","event":"\t[SUCCESSFUL ] org.postgresql#postgresql;42.7.1!postgresql.jar (1503ms)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:13.268845Z","level":"error","event":"downloading https://repo1.maven.org/maven2/org/checkerframework/checker-qual/3.41.0/checker-qual-3.41.0.jar ...","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:13.554949Z","level":"error","event":"\t[SUCCESSFUL ] org.checkerframework#checker-qual;3.41.0!checker-qual.jar (469ms)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:13.555786Z","level":"error","event":":: resolution report :: resolve 4567ms :: artifacts dl 1978ms","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:13.556201Z","level":"error","event":"\t:: modules in use:","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:13.556531Z","level":"error","event":"\torg.checkerframework#checker-qual;3.41.0 from central in [default]","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:13.556857Z","level":"error","event":"\torg.postgresql#postgresql;42.7.1 from central in [default]","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:13.557160Z","level":"error","event":"\t---------------------------------------------------------------------","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:13.557475Z","level":"error","event":"\t|                  |            modules            ||   artifacts   |","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:13.557935Z","level":"error","event":"\t|       conf       | number| search|dwnlded|evicted|| number|dwnlded|","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:13.558350Z","level":"error","event":"\t---------------------------------------------------------------------","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:13.558779Z","level":"error","event":"\t|      default     |   2   |   2   |   2   |   0   ||   2   |   2   |","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:13.559110Z","level":"error","event":"\t---------------------------------------------------------------------","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:13.562698Z","level":"error","event":":: retrieving :: org.apache.spark#spark-submit-parent-00d5b7e2-e9af-4e07-882e-2cd345131a77","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:13.563373Z","level":"error","event":"\tconfs: [default]","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:13.590607Z","level":"error","event":"\t2 artifacts copied, 0 already retrieved (1282kB/28ms)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:14.268780Z","level":"error","event":"25/06/17 18:50:14 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:14.526080Z","level":"error","event":"Using Spark's default log4j profile: org/apache/spark/log4j2-defaults.properties","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:14.526982Z","level":"error","event":"Setting default log level to \"WARN\".","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:14.527611Z","level":"error","event":"To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:20.009567Z","level":"error","event":"25/06/17 18:50:20 WARN StandaloneAppClient$ClientEndpoint: Failed to connect to master spark-master:7077","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:20.010789Z","level":"error","event":"org.apache.spark.SparkException: Exception thrown in awaitResult:","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:20.011314Z","level":"error","event":"\tat org.apache.spark.util.SparkThreadUtils$.awaitResult(SparkThreadUtils.scala:53)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:20.014677Z","level":"error","event":"\tat org.apache.spark.util.ThreadUtils$.awaitResult(ThreadUtils.scala:342)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:20.019305Z","level":"error","event":"\tat org.apache.spark.rpc.RpcTimeout.awaitResult(RpcTimeout.scala:75)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:20.025452Z","level":"error","event":"\tat org.apache.spark.rpc.RpcEnv.setupEndpointRefByURI(RpcEnv.scala:102)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:20.027180Z","level":"error","event":"\tat org.apache.spark.rpc.RpcEnv.setupEndpointRef(RpcEnv.scala:110)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:20.027860Z","level":"error","event":"\tat org.apache.spark.deploy.client.StandaloneAppClient$ClientEndpoint$$anon$1.run(StandaloneAppClient.scala:110)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:20.028404Z","level":"error","event":"\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:20.028936Z","level":"error","event":"\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:20.030053Z","level":"error","event":"\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:20.030578Z","level":"error","event":"\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:20.031322Z","level":"error","event":"\tat java.base/java.lang.Thread.run(Thread.java:840)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:20.031816Z","level":"error","event":"Caused by: java.lang.RuntimeException: java.io.InvalidClassException: org.apache.spark.rpc.netty.RpcEndpointVerifier$CheckExistence; local class incompatible: stream classdesc serialVersionUID = 5378738997755484868, local class serialVersionUID = 7789290765573734431","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:20.032176Z","level":"error","event":"\tat java.base/java.io.ObjectStreamClass.initNonProxy(Unknown Source)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:20.032564Z","level":"error","event":"\tat java.base/java.io.ObjectInputStream.readNonProxyDesc(Unknown Source)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:20.032904Z","level":"error","event":"\tat java.base/java.io.ObjectInputStream.readClassDesc(Unknown Source)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:20.033243Z","level":"error","event":"\tat java.base/java.io.ObjectInputStream.readOrdinaryObject(Unknown Source)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:20.033555Z","level":"error","event":"\tat java.base/java.io.ObjectInputStream.readObject0(Unknown Source)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:20.033885Z","level":"error","event":"\tat java.base/java.io.ObjectInputStream.readObject(Unknown Source)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:20.034319Z","level":"error","event":"\tat java.base/java.io.ObjectInputStream.readObject(Unknown Source)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:20.034723Z","level":"error","event":"\tat org.apache.spark.serializer.JavaDeserializationStream.readObject(JavaSerializer.scala:87)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:20.035103Z","level":"error","event":"\tat org.apache.spark.serializer.JavaSerializerInstance.deserialize(JavaSerializer.scala:123)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:20.035516Z","level":"error","event":"\tat org.apache.spark.rpc.netty.NettyRpcEnv.$anonfun$deserialize$2(NettyRpcEnv.scala:299)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:20.036018Z","level":"error","event":"\tat scala.util.DynamicVariable.withValue(DynamicVariable.scala:62)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:20.037337Z","level":"error","event":"\tat org.apache.spark.rpc.netty.NettyRpcEnv.deserialize(NettyRpcEnv.scala:352)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:20.037973Z","level":"error","event":"\tat org.apache.spark.rpc.netty.NettyRpcEnv.$anonfun$deserialize$1(NettyRpcEnv.scala:298)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:20.038437Z","level":"error","event":"\tat scala.util.DynamicVariable.withValue(DynamicVariable.scala:62)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:20.039217Z","level":"error","event":"\tat org.apache.spark.rpc.netty.NettyRpcEnv.deserialize(NettyRpcEnv.scala:298)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:20.041106Z","level":"error","event":"\tat org.apache.spark.rpc.netty.RequestMessage$.apply(NettyRpcEnv.scala:646)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:20.042073Z","level":"error","event":"\tat org.apache.spark.rpc.netty.NettyRpcHandler.internalReceive(NettyRpcEnv.scala:697)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:20.042838Z","level":"error","event":"\tat org.apache.spark.rpc.netty.NettyRpcHandler.receive(NettyRpcEnv.scala:682)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:20.043428Z","level":"error","event":"\tat org.apache.spark.network.server.TransportRequestHandler.processRpcRequest(TransportRequestHandler.java:163)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:20.044410Z","level":"error","event":"\tat org.apache.spark.network.server.TransportRequestHandler.handle(TransportRequestHandler.java:109)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:20.046005Z","level":"error","event":"\tat org.apache.spark.network.server.TransportChannelHandler.channelRead0(TransportChannelHandler.java:140)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:20.046611Z","level":"error","event":"\tat org.apache.spark.network.server.TransportChannelHandler.channelRead0(TransportChannelHandler.java:53)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:20.046991Z","level":"error","event":"\tat io.netty.channel.SimpleChannelInboundHandler.channelRead(SimpleChannelInboundHandler.java:99)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:20.047322Z","level":"error","event":"\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:20.047666Z","level":"error","event":"\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:20.048009Z","level":"error","event":"\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:20.048407Z","level":"error","event":"\tat io.netty.handler.timeout.IdleStateHandler.channelRead(IdleStateHandler.java:286)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:20.048783Z","level":"error","event":"\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:20.049099Z","level":"error","event":"\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:20.049585Z","level":"error","event":"\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:20.049901Z","level":"error","event":"\tat io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:103)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:20.050366Z","level":"error","event":"\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:20.050777Z","level":"error","event":"\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:20.051174Z","level":"error","event":"\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:20.052698Z","level":"error","event":"\tat org.apache.spark.network.util.TransportFrameDecoder.channelRead(TransportFrameDecoder.java:102)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:20.053436Z","level":"error","event":"\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:20.054428Z","level":"error","event":"\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:20.056164Z","level":"error","event":"\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:20.056834Z","level":"error","event":"\tat io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:20.057420Z","level":"error","event":"\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:20.057818Z","level":"error","event":"\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:20.058203Z","level":"error","event":"\tat io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:20.058569Z","level":"error","event":"\tat io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:20.058920Z","level":"error","event":"\tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:20.059275Z","level":"error","event":"\tat io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:20.059584Z","level":"error","event":"\tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:20.059933Z","level":"error","event":"\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:20.060263Z","level":"error","event":"\tat io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:20.060557Z","level":"error","event":"\tat io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:20.061009Z","level":"error","event":"\tat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:20.061308Z","level":"error","event":"\tat java.base/java.lang.Thread.run(Unknown Source)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:20.061686Z","level":"error","event":"","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:20.062425Z","level":"error","event":"\tat org.apache.spark.network.client.TransportResponseHandler.handle(TransportResponseHandler.java:217)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:20.063123Z","level":"error","event":"\tat org.apache.spark.network.server.TransportChannelHandler.channelRead0(TransportChannelHandler.java:145)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:20.063637Z","level":"error","event":"\tat org.apache.spark.network.server.TransportChannelHandler.channelRead0(TransportChannelHandler.java:55)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:20.064080Z","level":"error","event":"\tat io.netty.channel.SimpleChannelInboundHandler.channelRead(SimpleChannelInboundHandler.java:99)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:20.064443Z","level":"error","event":"\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:20.064774Z","level":"error","event":"\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:20.065113Z","level":"error","event":"\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:20.065450Z","level":"error","event":"\tat io.netty.handler.timeout.IdleStateHandler.channelRead(IdleStateHandler.java:289)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:20.065760Z","level":"error","event":"\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:20.066214Z","level":"error","event":"\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:20.066555Z","level":"error","event":"\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:20.067289Z","level":"error","event":"\tat io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:20.067777Z","level":"error","event":"\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:20.068421Z","level":"error","event":"\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:20.068746Z","level":"error","event":"\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:20.069182Z","level":"error","event":"\tat org.apache.spark.network.util.TransportFrameDecoder.channelRead(TransportFrameDecoder.java:102)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:20.069548Z","level":"error","event":"\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:20.070008Z","level":"error","event":"\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:20.070656Z","level":"error","event":"\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:20.071040Z","level":"error","event":"\tat io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:20.071490Z","level":"error","event":"\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:20.071965Z","level":"error","event":"\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:20.072277Z","level":"error","event":"\tat io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:20.072620Z","level":"error","event":"\tat io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:20.073080Z","level":"error","event":"\tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:20.073412Z","level":"error","event":"\tat io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:20.073802Z","level":"error","event":"\tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:20.074119Z","level":"error","event":"\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:20.074488Z","level":"error","event":"\tat io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:20.074822Z","level":"error","event":"\tat io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:20.075252Z","level":"error","event":"\tat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:20.075577Z","level":"error","event":"\t... 1 more","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:39.807259Z","level":"error","event":"25/06/17 18:50:39 WARN StandaloneAppClient$ClientEndpoint: Failed to connect to master spark-master:7077","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:39.808582Z","level":"error","event":"org.apache.spark.SparkException: Exception thrown in awaitResult:","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:39.809024Z","level":"error","event":"\tat org.apache.spark.util.SparkThreadUtils$.awaitResult(SparkThreadUtils.scala:53)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:39.809398Z","level":"error","event":"\tat org.apache.spark.util.ThreadUtils$.awaitResult(ThreadUtils.scala:342)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:39.809760Z","level":"error","event":"\tat org.apache.spark.rpc.RpcTimeout.awaitResult(RpcTimeout.scala:75)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:39.810049Z","level":"error","event":"\tat org.apache.spark.rpc.RpcEnv.setupEndpointRefByURI(RpcEnv.scala:102)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:39.810324Z","level":"error","event":"\tat org.apache.spark.rpc.RpcEnv.setupEndpointRef(RpcEnv.scala:110)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:39.810611Z","level":"error","event":"\tat org.apache.spark.deploy.client.StandaloneAppClient$ClientEndpoint$$anon$1.run(StandaloneAppClient.scala:110)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:39.810902Z","level":"error","event":"\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:39.811208Z","level":"error","event":"\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:39.811504Z","level":"error","event":"\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:39.811845Z","level":"error","event":"\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:39.812117Z","level":"error","event":"\tat java.base/java.lang.Thread.run(Thread.java:840)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:39.812396Z","level":"error","event":"Caused by: java.lang.RuntimeException: java.io.InvalidClassException: org.apache.spark.rpc.netty.RpcEndpointVerifier$CheckExistence; local class incompatible: stream classdesc serialVersionUID = 5378738997755484868, local class serialVersionUID = 7789290765573734431","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:39.812753Z","level":"error","event":"\tat java.base/java.io.ObjectStreamClass.initNonProxy(Unknown Source)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:39.813039Z","level":"error","event":"\tat java.base/java.io.ObjectInputStream.readNonProxyDesc(Unknown Source)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:39.813328Z","level":"error","event":"\tat java.base/java.io.ObjectInputStream.readClassDesc(Unknown Source)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:39.813609Z","level":"error","event":"\tat java.base/java.io.ObjectInputStream.readOrdinaryObject(Unknown Source)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:39.813909Z","level":"error","event":"\tat java.base/java.io.ObjectInputStream.readObject0(Unknown Source)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:39.814169Z","level":"error","event":"\tat java.base/java.io.ObjectInputStream.readObject(Unknown Source)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:39.814443Z","level":"error","event":"\tat java.base/java.io.ObjectInputStream.readObject(Unknown Source)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:39.814805Z","level":"error","event":"\tat org.apache.spark.serializer.JavaDeserializationStream.readObject(JavaSerializer.scala:87)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:39.815088Z","level":"error","event":"\tat org.apache.spark.serializer.JavaSerializerInstance.deserialize(JavaSerializer.scala:123)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:39.815329Z","level":"error","event":"\tat org.apache.spark.rpc.netty.NettyRpcEnv.$anonfun$deserialize$2(NettyRpcEnv.scala:299)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:39.815685Z","level":"error","event":"\tat scala.util.DynamicVariable.withValue(DynamicVariable.scala:62)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:39.815998Z","level":"error","event":"\tat org.apache.spark.rpc.netty.NettyRpcEnv.deserialize(NettyRpcEnv.scala:352)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:39.816311Z","level":"error","event":"\tat org.apache.spark.rpc.netty.NettyRpcEnv.$anonfun$deserialize$1(NettyRpcEnv.scala:298)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:39.816709Z","level":"error","event":"\tat scala.util.DynamicVariable.withValue(DynamicVariable.scala:62)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:39.817008Z","level":"error","event":"\tat org.apache.spark.rpc.netty.NettyRpcEnv.deserialize(NettyRpcEnv.scala:298)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:39.817313Z","level":"error","event":"\tat org.apache.spark.rpc.netty.RequestMessage$.apply(NettyRpcEnv.scala:646)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:39.817656Z","level":"error","event":"\tat org.apache.spark.rpc.netty.NettyRpcHandler.internalReceive(NettyRpcEnv.scala:697)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:39.818004Z","level":"error","event":"\tat org.apache.spark.rpc.netty.NettyRpcHandler.receive(NettyRpcEnv.scala:682)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:39.818276Z","level":"error","event":"\tat org.apache.spark.network.server.TransportRequestHandler.processRpcRequest(TransportRequestHandler.java:163)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:39.818507Z","level":"error","event":"\tat org.apache.spark.network.server.TransportRequestHandler.handle(TransportRequestHandler.java:109)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:39.818792Z","level":"error","event":"\tat org.apache.spark.network.server.TransportChannelHandler.channelRead0(TransportChannelHandler.java:140)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:39.819026Z","level":"error","event":"\tat org.apache.spark.network.server.TransportChannelHandler.channelRead0(TransportChannelHandler.java:53)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:39.819286Z","level":"error","event":"\tat io.netty.channel.SimpleChannelInboundHandler.channelRead(SimpleChannelInboundHandler.java:99)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:39.819527Z","level":"error","event":"\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:39.819798Z","level":"error","event":"\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:39.820036Z","level":"error","event":"\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:39.820269Z","level":"error","event":"\tat io.netty.handler.timeout.IdleStateHandler.channelRead(IdleStateHandler.java:286)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:39.820508Z","level":"error","event":"\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:39.820715Z","level":"error","event":"\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:39.820935Z","level":"error","event":"\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:39.821179Z","level":"error","event":"\tat io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:103)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:39.821537Z","level":"error","event":"\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:39.821753Z","level":"error","event":"\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:39.821967Z","level":"error","event":"\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:39.822194Z","level":"error","event":"\tat org.apache.spark.network.util.TransportFrameDecoder.channelRead(TransportFrameDecoder.java:102)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:39.822446Z","level":"error","event":"\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:39.822756Z","level":"error","event":"\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:39.823034Z","level":"error","event":"\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:39.823356Z","level":"error","event":"\tat io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:39.823632Z","level":"error","event":"\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:39.823897Z","level":"error","event":"\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:39.824138Z","level":"error","event":"\tat io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:39.824370Z","level":"error","event":"\tat io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:39.824607Z","level":"error","event":"\tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:39.824918Z","level":"error","event":"\tat io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:39.825187Z","level":"error","event":"\tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:39.825447Z","level":"error","event":"\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:39.825715Z","level":"error","event":"\tat io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:39.825973Z","level":"error","event":"\tat io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:39.826206Z","level":"error","event":"\tat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:39.826483Z","level":"error","event":"\tat java.base/java.lang.Thread.run(Unknown Source)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:39.826783Z","level":"error","event":"","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:39.827007Z","level":"error","event":"\tat org.apache.spark.network.client.TransportResponseHandler.handle(TransportResponseHandler.java:217)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:39.827257Z","level":"error","event":"\tat org.apache.spark.network.server.TransportChannelHandler.channelRead0(TransportChannelHandler.java:145)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:39.827560Z","level":"error","event":"\tat org.apache.spark.network.server.TransportChannelHandler.channelRead0(TransportChannelHandler.java:55)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:39.827831Z","level":"error","event":"\tat io.netty.channel.SimpleChannelInboundHandler.channelRead(SimpleChannelInboundHandler.java:99)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:39.828096Z","level":"error","event":"\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:39.828359Z","level":"error","event":"\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:39.828609Z","level":"error","event":"\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:39.828876Z","level":"error","event":"\tat io.netty.handler.timeout.IdleStateHandler.channelRead(IdleStateHandler.java:289)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:39.829130Z","level":"error","event":"\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:39.829387Z","level":"error","event":"\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:39.829670Z","level":"error","event":"\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:39.829924Z","level":"error","event":"\tat io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:39.830161Z","level":"error","event":"\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:39.830426Z","level":"error","event":"\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:39.830671Z","level":"error","event":"\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:39.830931Z","level":"error","event":"\tat org.apache.spark.network.util.TransportFrameDecoder.channelRead(TransportFrameDecoder.java:102)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:39.831186Z","level":"error","event":"\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:39.831498Z","level":"error","event":"\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:39.831741Z","level":"error","event":"\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:39.831974Z","level":"error","event":"\tat io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:39.832204Z","level":"error","event":"\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:39.832527Z","level":"error","event":"\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:39.832803Z","level":"error","event":"\tat io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:39.833063Z","level":"error","event":"\tat io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:39.833315Z","level":"error","event":"\tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:39.833577Z","level":"error","event":"\tat io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:39.833898Z","level":"error","event":"\tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:39.834152Z","level":"error","event":"\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:39.834392Z","level":"error","event":"\tat io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:39.834636Z","level":"error","event":"\tat io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:39.834957Z","level":"error","event":"\tat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:39.835219Z","level":"error","event":"\t... 1 more","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:59.959745Z","level":"error","event":"25/06/17 18:50:59 WARN StandaloneAppClient$ClientEndpoint: Failed to connect to master spark-master:7077","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:59.960589Z","level":"error","event":"org.apache.spark.SparkException: Exception thrown in awaitResult:","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:59.960997Z","level":"error","event":"\tat org.apache.spark.util.SparkThreadUtils$.awaitResult(SparkThreadUtils.scala:53)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:59.961616Z","level":"error","event":"\tat org.apache.spark.util.ThreadUtils$.awaitResult(ThreadUtils.scala:342)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:59.962041Z","level":"error","event":"\tat org.apache.spark.rpc.RpcTimeout.awaitResult(RpcTimeout.scala:75)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:59.962438Z","level":"error","event":"\tat org.apache.spark.rpc.RpcEnv.setupEndpointRefByURI(RpcEnv.scala:102)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:59.963176Z","level":"error","event":"\tat org.apache.spark.rpc.RpcEnv.setupEndpointRef(RpcEnv.scala:110)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:59.964561Z","level":"error","event":"\tat org.apache.spark.deploy.client.StandaloneAppClient$ClientEndpoint$$anon$1.run(StandaloneAppClient.scala:110)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:59.965881Z","level":"error","event":"\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:59.966905Z","level":"error","event":"\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:59.971191Z","level":"error","event":"\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:59.973825Z","level":"error","event":"\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:59.974792Z","level":"error","event":"\tat java.base/java.lang.Thread.run(Thread.java:840)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:59.976890Z","level":"error","event":"Caused by: java.lang.RuntimeException: java.io.InvalidClassException: org.apache.spark.rpc.netty.RpcEndpointVerifier$CheckExistence; local class incompatible: stream classdesc serialVersionUID = 5378738997755484868, local class serialVersionUID = 7789290765573734431","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:59.978509Z","level":"error","event":"\tat java.base/java.io.ObjectStreamClass.initNonProxy(Unknown Source)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:59.979429Z","level":"error","event":"\tat java.base/java.io.ObjectInputStream.readNonProxyDesc(Unknown Source)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:59.980408Z","level":"error","event":"\tat java.base/java.io.ObjectInputStream.readClassDesc(Unknown Source)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:59.981731Z","level":"error","event":"\tat java.base/java.io.ObjectInputStream.readOrdinaryObject(Unknown Source)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:59.983256Z","level":"error","event":"\tat java.base/java.io.ObjectInputStream.readObject0(Unknown Source)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:59.985194Z","level":"error","event":"\tat java.base/java.io.ObjectInputStream.readObject(Unknown Source)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:59.987499Z","level":"error","event":"\tat java.base/java.io.ObjectInputStream.readObject(Unknown Source)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:59.994556Z","level":"error","event":"\tat org.apache.spark.serializer.JavaDeserializationStream.readObject(JavaSerializer.scala:87)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:59.996487Z","level":"error","event":"\tat org.apache.spark.serializer.JavaSerializerInstance.deserialize(JavaSerializer.scala:123)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:59.998269Z","level":"error","event":"\tat org.apache.spark.rpc.netty.NettyRpcEnv.$anonfun$deserialize$2(NettyRpcEnv.scala:299)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:50:59.999404Z","level":"error","event":"\tat scala.util.DynamicVariable.withValue(DynamicVariable.scala:62)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:51:00.000321Z","level":"error","event":"\tat org.apache.spark.rpc.netty.NettyRpcEnv.deserialize(NettyRpcEnv.scala:352)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:51:00.000796Z","level":"error","event":"\tat org.apache.spark.rpc.netty.NettyRpcEnv.$anonfun$deserialize$1(NettyRpcEnv.scala:298)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:51:00.001174Z","level":"error","event":"\tat scala.util.DynamicVariable.withValue(DynamicVariable.scala:62)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:51:00.001538Z","level":"error","event":"\tat org.apache.spark.rpc.netty.NettyRpcEnv.deserialize(NettyRpcEnv.scala:298)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:51:00.001891Z","level":"error","event":"\tat org.apache.spark.rpc.netty.RequestMessage$.apply(NettyRpcEnv.scala:646)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:51:00.002436Z","level":"error","event":"\tat org.apache.spark.rpc.netty.NettyRpcHandler.internalReceive(NettyRpcEnv.scala:697)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:51:00.002845Z","level":"error","event":"\tat org.apache.spark.rpc.netty.NettyRpcHandler.receive(NettyRpcEnv.scala:682)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:51:00.003187Z","level":"error","event":"\tat org.apache.spark.network.server.TransportRequestHandler.processRpcRequest(TransportRequestHandler.java:163)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:51:00.003955Z","level":"error","event":"\tat org.apache.spark.network.server.TransportRequestHandler.handle(TransportRequestHandler.java:109)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:51:00.005197Z","level":"error","event":"\tat org.apache.spark.network.server.TransportChannelHandler.channelRead0(TransportChannelHandler.java:140)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:51:00.006004Z","level":"error","event":"\tat org.apache.spark.network.server.TransportChannelHandler.channelRead0(TransportChannelHandler.java:53)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:51:00.007585Z","level":"error","event":"\tat io.netty.channel.SimpleChannelInboundHandler.channelRead(SimpleChannelInboundHandler.java:99)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:51:00.009525Z","level":"error","event":"\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:51:00.012741Z","level":"error","event":"\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:51:00.013504Z","level":"error","event":"\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:51:00.014033Z","level":"error","event":"\tat io.netty.handler.timeout.IdleStateHandler.channelRead(IdleStateHandler.java:286)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:51:00.014577Z","level":"error","event":"\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:51:00.015567Z","level":"error","event":"\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:51:00.016584Z","level":"error","event":"\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:51:00.017122Z","level":"error","event":"\tat io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:103)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:51:00.058155Z","level":"error","event":"\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:51:00.058901Z","level":"error","event":"\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:51:00.059369Z","level":"error","event":"\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:51:00.059754Z","level":"error","event":"\tat org.apache.spark.network.util.TransportFrameDecoder.channelRead(TransportFrameDecoder.java:102)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:51:00.060185Z","level":"error","event":"\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:51:00.060578Z","level":"error","event":"\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:51:00.060944Z","level":"error","event":"\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:51:00.062533Z","level":"error","event":"\tat io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:51:00.063679Z","level":"error","event":"\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:51:00.064395Z","level":"error","event":"\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:51:00.064962Z","level":"error","event":"\tat io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:51:00.065437Z","level":"error","event":"\tat io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:51:00.065925Z","level":"error","event":"\tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:51:00.066314Z","level":"error","event":"\tat io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:51:00.067474Z","level":"error","event":"\tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:51:00.068061Z","level":"error","event":"\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:51:00.068680Z","level":"error","event":"\tat io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:51:00.069106Z","level":"error","event":"\tat io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:51:00.069511Z","level":"error","event":"\tat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:51:00.069867Z","level":"error","event":"\tat java.base/java.lang.Thread.run(Unknown Source)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:51:00.070189Z","level":"error","event":"","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:51:00.070867Z","level":"error","event":"\tat org.apache.spark.network.client.TransportResponseHandler.handle(TransportResponseHandler.java:217)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:51:00.071264Z","level":"error","event":"\tat org.apache.spark.network.server.TransportChannelHandler.channelRead0(TransportChannelHandler.java:145)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:51:00.071628Z","level":"error","event":"\tat org.apache.spark.network.server.TransportChannelHandler.channelRead0(TransportChannelHandler.java:55)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:51:00.072032Z","level":"error","event":"\tat io.netty.channel.SimpleChannelInboundHandler.channelRead(SimpleChannelInboundHandler.java:99)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:51:00.072393Z","level":"error","event":"\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:51:00.072791Z","level":"error","event":"\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:51:00.073161Z","level":"error","event":"\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:51:00.073853Z","level":"error","event":"\tat io.netty.handler.timeout.IdleStateHandler.channelRead(IdleStateHandler.java:289)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:51:00.074693Z","level":"error","event":"\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:51:00.075349Z","level":"error","event":"\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:51:00.076052Z","level":"error","event":"\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:51:00.076838Z","level":"error","event":"\tat io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:51:00.079405Z","level":"error","event":"\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:51:00.080933Z","level":"error","event":"\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:51:00.083044Z","level":"error","event":"\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:51:00.083893Z","level":"error","event":"\tat org.apache.spark.network.util.TransportFrameDecoder.channelRead(TransportFrameDecoder.java:102)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:51:00.084462Z","level":"error","event":"\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:51:00.084906Z","level":"error","event":"\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:51:00.085277Z","level":"error","event":"\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:51:00.085615Z","level":"error","event":"\tat io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:51:00.085936Z","level":"error","event":"\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:51:00.086354Z","level":"error","event":"\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:51:00.087085Z","level":"error","event":"\tat io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:51:00.087649Z","level":"error","event":"\tat io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:51:00.088065Z","level":"error","event":"\tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:51:00.088540Z","level":"error","event":"\tat io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:51:00.089200Z","level":"error","event":"\tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:51:00.089669Z","level":"error","event":"\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:51:00.090057Z","level":"error","event":"\tat io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:51:00.090507Z","level":"error","event":"\tat io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:51:00.091017Z","level":"error","event":"\tat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:51:00.091540Z","level":"error","event":"\t... 1 more","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:51:19.930841Z","level":"error","event":"25/06/17 18:51:19 WARN StandaloneSchedulerBackend: Application ID is not initialized yet.","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:51:19.935399Z","level":"error","event":"25/06/17 18:51:19 ERROR StandaloneSchedulerBackend: Application has been killed. Reason: All masters are unresponsive! Giving up.","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:51:20.893346Z","level":"error","event":"25/06/17 18:51:20 WARN StandaloneAppClient$ClientEndpoint: Drop UnregisterApplication(null) because has not yet connected to master","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-17T18:51:23.681900","level":"error","event":"Task failed with exception","logger":"task","error_detail":[{"exc_type":"Py4JJavaError","exc_value":"An error occurred while calling None.org.apache.spark.sql.classic.SparkSession.\n: java.lang.IllegalStateException: Cannot call methods on a stopped SparkContext.\nThis stopped SparkContext was created at:\n\norg.apache.spark.api.java.JavaSparkContext.<init>(JavaSparkContext.scala:59)\njava.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\njava.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\njava.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)\njava.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:247)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:238)\npy4j.commands.ConstructorCommand.invokeConstructor(ConstructorCommand.java:80)\npy4j.commands.ConstructorCommand.execute(ConstructorCommand.java:69)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)\npy4j.ClientServerConnection.run(ClientServerConnection.java:108)\njava.base/java.lang.Thread.run(Thread.java:840)\n\nAnd it was stopped at:\n\norg.apache.spark.SparkContext$$anon$3.run(SparkContext.scala:2284)\n\nThe currently active SparkContext was created at:\n\n(No active SparkContext.)\n         \n\tat org.apache.spark.SparkContext.assertNotStopped(SparkContext.scala:128)\n\tat org.apache.spark.sql.classic.SparkSession.<init>(SparkSession.scala:124)\n\tat org.apache.spark.sql.classic.SparkSession.<init>(SparkSession.scala:117)\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)\n\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:247)\n\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\n\tat py4j.Gateway.invoke(Gateway.java:238)\n\tat py4j.commands.ConstructorCommand.invokeConstructor(ConstructorCommand.java:80)\n\tat py4j.commands.ConstructorCommand.execute(ConstructorCommand.java:69)\n\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)\n\tat py4j.ClientServerConnection.run(ClientServerConnection.java:108)\n\tat java.base/java.lang.Thread.run(Thread.java:840)\n","exc_notes":[],"syntax_error":null,"is_cause":false,"frames":[{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/execution_time/task_runner.py","lineno":825,"name":"run"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/execution_time/task_runner.py","lineno":1088,"name":"_execute_task"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/bases/operator.py","lineno":408,"name":"wrapper"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/providers/standard/operators/python.py","lineno":212,"name":"execute"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/providers/standard/operators/python.py","lineno":235,"name":"execute_callable"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/execution_time/callback_runner.py","lineno":81,"name":"run"},{"filename":"/opt/airflow/dags/etl_dim_customer.py","lineno":73,"name":"extract_customer"},{"filename":"/opt/airflow/dags/etl_dim_customer.py","lineno":49,"name":"get_spark"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/pyspark/sql/session.py","lineno":559,"name":"getOrCreate"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/pyspark/sql/session.py","lineno":641,"name":"__init__"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/py4j/java_gateway.py","lineno":1627,"name":"__call__"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/py4j/protocol.py","lineno":327,"name":"get_return_value"}]}]}
{"timestamp":"2025-06-17T18:51:23.909271Z","level":"info","event":"Task instance in failure state","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-17T18:51:23.910049Z","level":"info","event":"Task start","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-17T18:51:23.910611Z","level":"info","event":"Task:<Task(PythonOperator): dim_customer_group.extract>","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-17T18:51:23.911086Z","level":"info","event":"Failure caused by An error occurred while calling None.org.apache.spark.sql.classic.SparkSession.","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-17T18:51:23.911492Z","level":"info","event":": java.lang.IllegalStateException: Cannot call methods on a stopped SparkContext.","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-17T18:51:23.911849Z","level":"info","event":"This stopped SparkContext was created at:","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-17T18:51:23.912118Z","level":"info","event":"","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-17T18:51:23.912362Z","level":"info","event":"org.apache.spark.api.java.JavaSparkContext.<init>(JavaSparkContext.scala:59)","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-17T18:51:23.912646Z","level":"info","event":"java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-17T18:51:23.912971Z","level":"info","event":"java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-17T18:51:23.913225Z","level":"info","event":"java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-17T18:51:23.913496Z","level":"info","event":"java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-17T18:51:23.913827Z","level":"info","event":"java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-17T18:51:23.914094Z","level":"info","event":"py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:247)","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-17T18:51:23.914690Z","level":"info","event":"py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-17T18:51:23.915143Z","level":"info","event":"py4j.Gateway.invoke(Gateway.java:238)","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-17T18:51:23.915479Z","level":"info","event":"py4j.commands.ConstructorCommand.invokeConstructor(ConstructorCommand.java:80)","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-17T18:51:23.915828Z","level":"info","event":"py4j.commands.ConstructorCommand.execute(ConstructorCommand.java:69)","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-17T18:51:23.916151Z","level":"info","event":"py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-17T18:51:23.916410Z","level":"info","event":"py4j.ClientServerConnection.run(ClientServerConnection.java:108)","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-17T18:51:23.916739Z","level":"info","event":"java.base/java.lang.Thread.run(Thread.java:840)","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-17T18:51:23.916984Z","level":"info","event":"","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-17T18:51:23.917241Z","level":"info","event":"And it was stopped at:","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-17T18:51:23.917508Z","level":"info","event":"","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-17T18:51:23.917808Z","level":"info","event":"org.apache.spark.SparkContext$$anon$3.run(SparkContext.scala:2284)","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-17T18:51:23.918096Z","level":"info","event":"","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-17T18:51:23.918319Z","level":"info","event":"The currently active SparkContext was created at:","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-17T18:51:23.918498Z","level":"info","event":"","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-17T18:51:23.918692Z","level":"info","event":"(No active SparkContext.)","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-17T18:51:23.918901Z","level":"info","event":"","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-17T18:51:23.919110Z","level":"info","event":"\tat org.apache.spark.SparkContext.assertNotStopped(SparkContext.scala:128)","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-17T18:51:23.919325Z","level":"info","event":"\tat org.apache.spark.sql.classic.SparkSession.<init>(SparkSession.scala:124)","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-17T18:51:23.919520Z","level":"info","event":"\tat org.apache.spark.sql.classic.SparkSession.<init>(SparkSession.scala:117)","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-17T18:51:23.919733Z","level":"info","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-17T18:51:23.919969Z","level":"info","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-17T18:51:23.920197Z","level":"info","event":"\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-17T18:51:23.920419Z","level":"info","event":"\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-17T18:51:23.920628Z","level":"info","event":"\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-17T18:51:23.920815Z","level":"info","event":"\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:247)","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-17T18:51:23.921025Z","level":"info","event":"\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-17T18:51:23.921423Z","level":"info","event":"\tat py4j.Gateway.invoke(Gateway.java:238)","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-17T18:51:23.921721Z","level":"info","event":"\tat py4j.commands.ConstructorCommand.invokeConstructor(ConstructorCommand.java:80)","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-17T18:51:23.921985Z","level":"info","event":"\tat py4j.commands.ConstructorCommand.execute(ConstructorCommand.java:69)","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-17T18:51:23.922222Z","level":"info","event":"\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-17T18:51:23.922537Z","level":"info","event":"\tat py4j.ClientServerConnection.run(ClientServerConnection.java:108)","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-17T18:51:23.922837Z","level":"info","event":"\tat java.base/java.lang.Thread.run(Thread.java:840)","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-17T18:51:23.923071Z","level":"info","event":"","chan":"stdout","logger":"task"}
